// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nfmessage/cachenfprofile/CacheNFProfilePutRequest.proto

package cachenfprofile // import "com/dbproxy/nfmessage/cachenfprofile"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CacheNFProfilePutRequest struct {
	CacheNfInstanceId    string   `protobuf:"bytes,1,opt,name=cache_nf_instance_id,json=cacheNfInstanceId,proto3" json:"cache_nf_instance_id,omitempty"`
	RawCacheNfProfile    string   `protobuf:"bytes,2,opt,name=raw_cache_nf_profile,json=rawCacheNfProfile,proto3" json:"raw_cache_nf_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheNFProfilePutRequest) Reset()         { *m = CacheNFProfilePutRequest{} }
func (m *CacheNFProfilePutRequest) String() string { return proto.CompactTextString(m) }
func (*CacheNFProfilePutRequest) ProtoMessage()    {}
func (*CacheNFProfilePutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_CacheNFProfilePutRequest_f11f4eee41ca0acd, []int{0}
}
func (m *CacheNFProfilePutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheNFProfilePutRequest.Unmarshal(m, b)
}
func (m *CacheNFProfilePutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheNFProfilePutRequest.Marshal(b, m, deterministic)
}
func (dst *CacheNFProfilePutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheNFProfilePutRequest.Merge(dst, src)
}
func (m *CacheNFProfilePutRequest) XXX_Size() int {
	return xxx_messageInfo_CacheNFProfilePutRequest.Size(m)
}
func (m *CacheNFProfilePutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheNFProfilePutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CacheNFProfilePutRequest proto.InternalMessageInfo

func (m *CacheNFProfilePutRequest) GetCacheNfInstanceId() string {
	if m != nil {
		return m.CacheNfInstanceId
	}
	return ""
}

func (m *CacheNFProfilePutRequest) GetRawCacheNfProfile() string {
	if m != nil {
		return m.RawCacheNfProfile
	}
	return ""
}

func init() {
	proto.RegisterType((*CacheNFProfilePutRequest)(nil), "grpc.CacheNFProfilePutRequest")
}

func init() {
	proto.RegisterFile("nfmessage/cachenfprofile/CacheNFProfilePutRequest.proto", fileDescriptor_CacheNFProfilePutRequest_f11f4eee41ca0acd)
}

var fileDescriptor_CacheNFProfilePutRequest_f11f4eee41ca0acd = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0xbf, 0x4b, 0xc4, 0x30,
	0x14, 0xa6, 0x22, 0x82, 0xd9, 0x2c, 0x0e, 0x5d, 0x04, 0x11, 0x07, 0xa7, 0x64, 0x70, 0xe8, 0x5e,
	0x41, 0xe8, 0x52, 0x4a, 0x47, 0x97, 0x90, 0xa6, 0x2f, 0x35, 0x60, 0x93, 0xf8, 0x92, 0x52, 0x85,
	0xe3, 0xfe, 0xf6, 0x23, 0x6d, 0x28, 0xdc, 0xd0, 0xf1, 0xf1, 0xbd, 0xef, 0x27, 0x29, 0x8d, 0x9a,
	0xc0, 0x7b, 0x31, 0x02, 0x93, 0x42, 0x7e, 0x83, 0x51, 0x0e, 0xad, 0xd2, 0x3f, 0xc0, 0x3e, 0xe2,
	0xd9, 0x7c, 0xb6, 0xdb, 0xd9, 0xce, 0xa1, 0x83, 0xdf, 0x19, 0x7c, 0xa0, 0x0e, 0x6d, 0xb0, 0xf9,
	0xed, 0x88, 0x4e, 0xbe, 0x9c, 0x48, 0x71, 0xf4, 0x97, 0x33, 0xf2, 0xb8, 0x4a, 0x72, 0xa3, 0xb8,
	0x36, 0x3e, 0x08, 0x23, 0x81, 0xeb, 0xa1, 0xc8, 0x9e, 0xb3, 0xb7, 0xfb, 0xee, 0x61, 0xc5, 0x1a,
	0x55, 0x27, 0xa4, 0x1e, 0x22, 0x01, 0xc5, 0xc2, 0x77, 0x52, 0x4a, 0x52, 0xdc, 0x6c, 0x04, 0x14,
	0xcb, 0xe6, 0xa5, 0x92, 0x57, 0x75, 0x26, 0x25, 0xa0, 0x96, 0xde, 0x5b, 0x43, 0xa5, 0x45, 0xa0,
	0x06, 0x15, 0x1d, 0x7a, 0x87, 0xf6, 0xef, 0x9f, 0xc6, 0x7c, 0x74, 0x6f, 0x47, 0xaf, 0xdb, 0x55,
	0x4f, 0x47, 0xb1, 0xdb, 0xd8, 0xee, 0xeb, 0x55, 0xda, 0x89, 0x25, 0x25, 0x76, 0x34, 0x51, 0x7f,
	0xb7, 0x4e, 0xf1, 0x7e, 0x09, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xb5, 0xe2, 0x27, 0x45, 0x01, 0x00,
	0x00,
}
