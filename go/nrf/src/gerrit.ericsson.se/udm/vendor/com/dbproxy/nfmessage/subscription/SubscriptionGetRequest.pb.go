// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nfmessage/subscription/SubscriptionGetRequest.proto

package subscription // import "com/dbproxy/nfmessage/subscription"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SubscriptionGetRequest struct {
	// Types that are valid to be assigned to Data:
	//	*SubscriptionGetRequest_SubscriptionId
	//	*SubscriptionGetRequest_Filter
	Data                 isSubscriptionGetRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SubscriptionGetRequest) Reset()         { *m = SubscriptionGetRequest{} }
func (m *SubscriptionGetRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionGetRequest) ProtoMessage()    {}
func (*SubscriptionGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SubscriptionGetRequest_6c28549eea8b900f, []int{0}
}
func (m *SubscriptionGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionGetRequest.Unmarshal(m, b)
}
func (m *SubscriptionGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionGetRequest.Marshal(b, m, deterministic)
}
func (dst *SubscriptionGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionGetRequest.Merge(dst, src)
}
func (m *SubscriptionGetRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionGetRequest.Size(m)
}
func (m *SubscriptionGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionGetRequest proto.InternalMessageInfo

type isSubscriptionGetRequest_Data interface {
	isSubscriptionGetRequest_Data()
}

type SubscriptionGetRequest_SubscriptionId struct {
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3,oneof"`
}

type SubscriptionGetRequest_Filter struct {
	Filter *SubscriptionFilter `protobuf:"bytes,2,opt,name=filter,proto3,oneof"`
}

func (*SubscriptionGetRequest_SubscriptionId) isSubscriptionGetRequest_Data() {}

func (*SubscriptionGetRequest_Filter) isSubscriptionGetRequest_Data() {}

func (m *SubscriptionGetRequest) GetData() isSubscriptionGetRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SubscriptionGetRequest) GetSubscriptionId() string {
	if x, ok := m.GetData().(*SubscriptionGetRequest_SubscriptionId); ok {
		return x.SubscriptionId
	}
	return ""
}

func (m *SubscriptionGetRequest) GetFilter() *SubscriptionFilter {
	if x, ok := m.GetData().(*SubscriptionGetRequest_Filter); ok {
		return x.Filter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SubscriptionGetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SubscriptionGetRequest_OneofMarshaler, _SubscriptionGetRequest_OneofUnmarshaler, _SubscriptionGetRequest_OneofSizer, []interface{}{
		(*SubscriptionGetRequest_SubscriptionId)(nil),
		(*SubscriptionGetRequest_Filter)(nil),
	}
}

func _SubscriptionGetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SubscriptionGetRequest)
	// data
	switch x := m.Data.(type) {
	case *SubscriptionGetRequest_SubscriptionId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.SubscriptionId)
	case *SubscriptionGetRequest_Filter:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Filter); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SubscriptionGetRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _SubscriptionGetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SubscriptionGetRequest)
	switch tag {
	case 1: // data.subscription_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &SubscriptionGetRequest_SubscriptionId{x}
		return true, err
	case 2: // data.filter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubscriptionFilter)
		err := b.DecodeMessage(msg)
		m.Data = &SubscriptionGetRequest_Filter{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SubscriptionGetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SubscriptionGetRequest)
	// data
	switch x := m.Data.(type) {
	case *SubscriptionGetRequest_SubscriptionId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SubscriptionId)))
		n += len(x.SubscriptionId)
	case *SubscriptionGetRequest_Filter:
		s := proto.Size(x.Filter)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*SubscriptionGetRequest)(nil), "grpc.SubscriptionGetRequest")
}

func init() {
	proto.RegisterFile("nfmessage/subscription/SubscriptionGetRequest.proto", fileDescriptor_SubscriptionGetRequest_6c28549eea8b900f)
}

var fileDescriptor_SubscriptionGetRequest_6c28549eea8b900f = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xce, 0x4b, 0xcb, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x2e, 0x4d, 0x2a, 0x4e, 0x2e, 0xca, 0x2c, 0x28, 0xc9,
	0xcc, 0xcf, 0xd3, 0x0f, 0x46, 0xe2, 0xb8, 0xa7, 0x96, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97,
	0xe8, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0xb1, 0xa4, 0x17, 0x15, 0x24, 0x4b, 0xe9, 0x13, 0xa1,
	0xd5, 0x2d, 0x33, 0xa7, 0x24, 0xb5, 0x08, 0xa2, 0x4d, 0xa9, 0x9e, 0x4b, 0x0c, 0xbb, 0xb1, 0x42,
	0x9a, 0x5c, 0xfc, 0xc8, 0x46, 0xc4, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x7a, 0x30,
	0x04, 0xf1, 0x21, 0x4b, 0x78, 0xa6, 0x08, 0x19, 0x71, 0xb1, 0xa5, 0x81, 0x0d, 0x95, 0x60, 0x52,
	0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd0, 0x03, 0x39, 0x46, 0x0f, 0xd3, 0x52, 0x0f, 0x86, 0x20, 0xa8,
	0x4a, 0x27, 0x36, 0x2e, 0x96, 0x94, 0xc4, 0x92, 0x44, 0xa7, 0x0a, 0x2e, 0xd3, 0xd4, 0xa2, 0xcc,
	0xe4, 0xe2, 0xe2, 0xfc, 0x3c, 0xbd, 0xe4, 0xfc, 0xa2, 0x54, 0xbd, 0xbc, 0xa2, 0x34, 0xbd, 0x94,
	0xa4, 0x82, 0xa2, 0xfc, 0x8a, 0x4a, 0x88, 0x31, 0x70, 0x2f, 0xe9, 0x21, 0x5b, 0xeb, 0x24, 0x8d,
	0xdd, 0xdd, 0x01, 0x20, 0x6f, 0x45, 0x29, 0x25, 0xe7, 0xe7, 0xea, 0x43, 0x4d, 0xc1, 0x11, 0x26,
	0x49, 0x6c, 0xe0, 0x10, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x51, 0xbc, 0x1f, 0x51, 0x6f,
	0x01, 0x00, 0x00,
}
