// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nfmessage/nfprofile/NFProfileGetRequest.proto

package nfprofile // import "com/dbproxy/nfmessage/nfprofile"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NFProfileGetRequest struct {
	// Types that are valid to be assigned to Data:
	//	*NFProfileGetRequest_TargetNfInstanceId
	//	*NFProfileGetRequest_Filter
	//	*NFProfileGetRequest_FragmentSessionId
	Data                 isNFProfileGetRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NFProfileGetRequest) Reset()         { *m = NFProfileGetRequest{} }
func (m *NFProfileGetRequest) String() string { return proto.CompactTextString(m) }
func (*NFProfileGetRequest) ProtoMessage()    {}
func (*NFProfileGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFProfileGetRequest_cd507954f94780aa, []int{0}
}
func (m *NFProfileGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFProfileGetRequest.Unmarshal(m, b)
}
func (m *NFProfileGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFProfileGetRequest.Marshal(b, m, deterministic)
}
func (dst *NFProfileGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFProfileGetRequest.Merge(dst, src)
}
func (m *NFProfileGetRequest) XXX_Size() int {
	return xxx_messageInfo_NFProfileGetRequest.Size(m)
}
func (m *NFProfileGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NFProfileGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NFProfileGetRequest proto.InternalMessageInfo

type isNFProfileGetRequest_Data interface {
	isNFProfileGetRequest_Data()
}

type NFProfileGetRequest_TargetNfInstanceId struct {
	TargetNfInstanceId string `protobuf:"bytes,1,opt,name=target_nf_instance_id,json=targetNfInstanceId,proto3,oneof"`
}

type NFProfileGetRequest_Filter struct {
	Filter *NFProfileFilter `protobuf:"bytes,2,opt,name=filter,proto3,oneof"`
}

type NFProfileGetRequest_FragmentSessionId struct {
	FragmentSessionId string `protobuf:"bytes,3,opt,name=fragment_session_id,json=fragmentSessionId,proto3,oneof"`
}

func (*NFProfileGetRequest_TargetNfInstanceId) isNFProfileGetRequest_Data() {}

func (*NFProfileGetRequest_Filter) isNFProfileGetRequest_Data() {}

func (*NFProfileGetRequest_FragmentSessionId) isNFProfileGetRequest_Data() {}

func (m *NFProfileGetRequest) GetData() isNFProfileGetRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NFProfileGetRequest) GetTargetNfInstanceId() string {
	if x, ok := m.GetData().(*NFProfileGetRequest_TargetNfInstanceId); ok {
		return x.TargetNfInstanceId
	}
	return ""
}

func (m *NFProfileGetRequest) GetFilter() *NFProfileFilter {
	if x, ok := m.GetData().(*NFProfileGetRequest_Filter); ok {
		return x.Filter
	}
	return nil
}

func (m *NFProfileGetRequest) GetFragmentSessionId() string {
	if x, ok := m.GetData().(*NFProfileGetRequest_FragmentSessionId); ok {
		return x.FragmentSessionId
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NFProfileGetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NFProfileGetRequest_OneofMarshaler, _NFProfileGetRequest_OneofUnmarshaler, _NFProfileGetRequest_OneofSizer, []interface{}{
		(*NFProfileGetRequest_TargetNfInstanceId)(nil),
		(*NFProfileGetRequest_Filter)(nil),
		(*NFProfileGetRequest_FragmentSessionId)(nil),
	}
}

func _NFProfileGetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NFProfileGetRequest)
	// data
	switch x := m.Data.(type) {
	case *NFProfileGetRequest_TargetNfInstanceId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TargetNfInstanceId)
	case *NFProfileGetRequest_Filter:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Filter); err != nil {
			return err
		}
	case *NFProfileGetRequest_FragmentSessionId:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FragmentSessionId)
	case nil:
	default:
		return fmt.Errorf("NFProfileGetRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _NFProfileGetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NFProfileGetRequest)
	switch tag {
	case 1: // data.target_nf_instance_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &NFProfileGetRequest_TargetNfInstanceId{x}
		return true, err
	case 2: // data.filter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NFProfileFilter)
		err := b.DecodeMessage(msg)
		m.Data = &NFProfileGetRequest_Filter{msg}
		return true, err
	case 3: // data.fragment_session_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &NFProfileGetRequest_FragmentSessionId{x}
		return true, err
	default:
		return false, nil
	}
}

func _NFProfileGetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NFProfileGetRequest)
	// data
	switch x := m.Data.(type) {
	case *NFProfileGetRequest_TargetNfInstanceId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TargetNfInstanceId)))
		n += len(x.TargetNfInstanceId)
	case *NFProfileGetRequest_Filter:
		s := proto.Size(x.Filter)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFProfileGetRequest_FragmentSessionId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.FragmentSessionId)))
		n += len(x.FragmentSessionId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*NFProfileGetRequest)(nil), "grpc.NFProfileGetRequest")
}

func init() {
	proto.RegisterFile("nfmessage/nfprofile/NFProfileGetRequest.proto", fileDescriptor_NFProfileGetRequest_cd507954f94780aa)
}

var fileDescriptor_NFProfileGetRequest_cd507954f94780aa = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x57, 0x1d, 0x05, 0xe3, 0xc9, 0x8e, 0x41, 0xf1, 0xe2, 0xf0, 0x34, 0x0f, 0x26, 0xb2,
	0xfd, 0x83, 0x1e, 0xe6, 0x7a, 0x19, 0xa3, 0xde, 0xbc, 0x94, 0x2c, 0xf9, 0x52, 0x02, 0x6b, 0x52,
	0xbf, 0x7c, 0x82, 0xfe, 0x30, 0xff, 0x9f, 0x74, 0xa9, 0x3b, 0x48, 0xd9, 0x2d, 0xf0, 0xe6, 0x7d,
	0x9f, 0xe4, 0x61, 0xcf, 0xce, 0xb4, 0x10, 0x82, 0x6c, 0x40, 0x38, 0xd3, 0xa1, 0x37, 0xf6, 0x08,
	0x62, 0xb7, 0xd9, 0xc7, 0xd3, 0x2b, 0x50, 0x05, 0x1f, 0x9f, 0x10, 0x88, 0x77, 0xe8, 0xc9, 0x67,
	0xd3, 0x06, 0x3b, 0x75, 0xff, 0x74, 0xb1, 0xb4, 0xb1, 0x47, 0x02, 0x8c, 0x85, 0xc7, 0x9f, 0x84,
	0xcd, 0x46, 0xe6, 0xb2, 0x35, 0x9b, 0x93, 0xc4, 0x06, 0xa8, 0x76, 0xa6, 0xb6, 0x2e, 0x90, 0x74,
	0x0a, 0x6a, 0xab, 0xf3, 0x64, 0x91, 0x2c, 0x6f, 0xb6, 0x93, 0x2a, 0x8b, 0xf1, 0xce, 0x94, 0x43,
	0x58, 0xea, 0x4c, 0xb0, 0xd4, 0x9c, 0xc6, 0xf3, 0xab, 0x45, 0xb2, 0xbc, 0x5d, 0xcd, 0x79, 0xff,
	0x1c, 0xfe, 0x8f, 0xbc, 0x9d, 0x54, 0xc3, 0xb5, 0xec, 0x85, 0xcd, 0x0c, 0xca, 0xa6, 0x05, 0x47,
	0x75, 0x80, 0x10, 0xac, 0x77, 0x3d, 0xe3, 0x7a, 0x60, 0xdc, 0xfd, 0x85, 0x6f, 0x31, 0x2b, 0x75,
	0x91, 0xb2, 0xa9, 0x96, 0x24, 0x0b, 0xcf, 0x56, 0x80, 0x56, 0x85, 0xe0, 0x1d, 0x57, 0x1e, 0x81,
	0x3b, 0x34, 0x5c, 0x1f, 0x3a, 0xf4, 0x5f, 0xdf, 0x91, 0x7a, 0x76, 0xc0, 0xcf, 0x0e, 0x8a, 0x7c,
	0xe4, 0xab, 0xfb, 0xde, 0xc3, 0xfb, 0x83, 0xf2, 0xad, 0x18, 0xfa, 0x62, 0x44, 0xdf, 0x21, 0x3d,
	0xf9, 0x5a, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x90, 0xa4, 0x23, 0x91, 0x01, 0x00, 0x00,
}
