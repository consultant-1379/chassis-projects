// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nfmessage/nrfaddress/NRFAddressIndex.proto

package nrfaddress // import "com/dbproxy/nfmessage/nrfaddress"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NRFAddressIndex struct {
	NrfAddressKey1       string   `protobuf:"bytes,1,opt,name=nrf_address_key1,json=nrfAddressKey1,proto3" json:"nrf_address_key1,omitempty"`
	NrfAddressKey2       string   `protobuf:"bytes,2,opt,name=nrf_address_key2,json=nrfAddressKey2,proto3" json:"nrf_address_key2,omitempty"`
	NrfAddressKey3       string   `protobuf:"bytes,3,opt,name=nrf_address_key3,json=nrfAddressKey3,proto3" json:"nrf_address_key3,omitempty"`
	NrfAddressKey4       string   `protobuf:"bytes,4,opt,name=nrf_address_key4,json=nrfAddressKey4,proto3" json:"nrf_address_key4,omitempty"`
	NrfAddressKey5       string   `protobuf:"bytes,5,opt,name=nrf_address_key5,json=nrfAddressKey5,proto3" json:"nrf_address_key5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NRFAddressIndex) Reset()         { *m = NRFAddressIndex{} }
func (m *NRFAddressIndex) String() string { return proto.CompactTextString(m) }
func (*NRFAddressIndex) ProtoMessage()    {}
func (*NRFAddressIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_NRFAddressIndex_e8ed93c259e5a877, []int{0}
}
func (m *NRFAddressIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NRFAddressIndex.Unmarshal(m, b)
}
func (m *NRFAddressIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NRFAddressIndex.Marshal(b, m, deterministic)
}
func (dst *NRFAddressIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NRFAddressIndex.Merge(dst, src)
}
func (m *NRFAddressIndex) XXX_Size() int {
	return xxx_messageInfo_NRFAddressIndex.Size(m)
}
func (m *NRFAddressIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_NRFAddressIndex.DiscardUnknown(m)
}

var xxx_messageInfo_NRFAddressIndex proto.InternalMessageInfo

func (m *NRFAddressIndex) GetNrfAddressKey1() string {
	if m != nil {
		return m.NrfAddressKey1
	}
	return ""
}

func (m *NRFAddressIndex) GetNrfAddressKey2() string {
	if m != nil {
		return m.NrfAddressKey2
	}
	return ""
}

func (m *NRFAddressIndex) GetNrfAddressKey3() string {
	if m != nil {
		return m.NrfAddressKey3
	}
	return ""
}

func (m *NRFAddressIndex) GetNrfAddressKey4() string {
	if m != nil {
		return m.NrfAddressKey4
	}
	return ""
}

func (m *NRFAddressIndex) GetNrfAddressKey5() string {
	if m != nil {
		return m.NrfAddressKey5
	}
	return ""
}

func init() {
	proto.RegisterType((*NRFAddressIndex)(nil), "grpc.NRFAddressIndex")
}

func init() {
	proto.RegisterFile("nfmessage/nrfaddress/NRFAddressIndex.proto", fileDescriptor_NRFAddressIndex_e8ed93c259e5a877)
}

var fileDescriptor_NRFAddressIndex_e8ed93c259e5a877 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xca, 0x4b, 0xcb, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0xcf, 0x2b, 0x4a, 0x4b, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e,
	0xd6, 0xf7, 0x0b, 0x72, 0x73, 0x84, 0x30, 0x3d, 0xf3, 0x52, 0x52, 0x2b, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0x58, 0xd2, 0x8b, 0x0a, 0x92, 0x95, 0x1e, 0x33, 0x72, 0xf1, 0xa3, 0xc9, 0x0b,
	0x69, 0x70, 0x09, 0xe4, 0x15, 0xa5, 0xc5, 0x43, 0xb5, 0xc7, 0x67, 0xa7, 0x56, 0x1a, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0xf1, 0xe5, 0x15, 0xa5, 0x41, 0x95, 0x7a, 0xa7, 0x56, 0x1a, 0x62,
	0x51, 0x69, 0x24, 0xc1, 0x84, 0x45, 0xa5, 0x11, 0x16, 0x95, 0xc6, 0x12, 0xcc, 0x58, 0x54, 0x1a,
	0x63, 0x51, 0x69, 0x22, 0xc1, 0x82, 0x45, 0xa5, 0x09, 0x16, 0x95, 0xa6, 0x12, 0xac, 0x58, 0x54,
	0x9a, 0x3a, 0xe5, 0x72, 0x19, 0xa7, 0x16, 0x65, 0x26, 0x17, 0x17, 0xe7, 0xe7, 0xe9, 0x25, 0xe7,
	0x17, 0xa5, 0xea, 0xe5, 0x15, 0xa5, 0xe9, 0xa5, 0x24, 0x15, 0x14, 0xe5, 0x57, 0x54, 0xea, 0x81,
	0xc2, 0x41, 0x0f, 0x1e, 0x70, 0x7a, 0x88, 0x80, 0x73, 0x12, 0x41, 0x0b, 0x99, 0x00, 0x50, 0xc0,
	0x45, 0x29, 0x24, 0xe7, 0xe7, 0xea, 0x43, 0x35, 0xeb, 0x63, 0x0b, 0xf0, 0x24, 0x36, 0x70, 0x08,
	0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x0d, 0x24, 0xff, 0x8f, 0x01, 0x00, 0x00,
}
