// Code generated by protoc-gen-go. DO NOT EDIT.
// source: NFDataManagementService.proto

package dbproxy // import "com/dbproxy"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import cachenfprofile "com/dbproxy/nfmessage/cachenfprofile"
import gpsiprefixprofile "com/dbproxy/nfmessage/gpsiprefixprofile"
import gpsiprofile "com/dbproxy/nfmessage/gpsiprofile"
import groupprofile "com/dbproxy/nfmessage/groupprofile"
import imsiprefixprofile "com/dbproxy/nfmessage/imsiprefixprofile"
import nfprofile "com/dbproxy/nfmessage/nfprofile"
import nrfaddress "com/dbproxy/nfmessage/nrfaddress"
import nrfprofile "com/dbproxy/nfmessage/nrfprofile"
import subscription "com/dbproxy/nfmessage/subscription"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InsertRequest struct {
	RegionName           string    `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	Item                 []*KVItem `protobuf:"bytes,2,rep,name=item,proto3" json:"item,omitempty"`
	TraceEnabled         bool      `protobuf:"varint,3,opt,name=trace_enabled,json=traceEnabled,proto3" json:"trace_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsertRequest) Reset()         { *m = InsertRequest{} }
func (m *InsertRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRequest) ProtoMessage()    {}
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{0}
}
func (m *InsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRequest.Unmarshal(m, b)
}
func (m *InsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRequest.Marshal(b, m, deterministic)
}
func (dst *InsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRequest.Merge(dst, src)
}
func (m *InsertRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRequest.Size(m)
}
func (m *InsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRequest proto.InternalMessageInfo

func (m *InsertRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *InsertRequest) GetItem() []*KVItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *InsertRequest) GetTraceEnabled() bool {
	if m != nil {
		return m.TraceEnabled
	}
	return false
}

type KVItem struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVItem) Reset()         { *m = KVItem{} }
func (m *KVItem) String() string { return proto.CompactTextString(m) }
func (*KVItem) ProtoMessage()    {}
func (*KVItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{1}
}
func (m *KVItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVItem.Unmarshal(m, b)
}
func (m *KVItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVItem.Marshal(b, m, deterministic)
}
func (dst *KVItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVItem.Merge(dst, src)
}
func (m *KVItem) XXX_Size() int {
	return xxx_messageInfo_KVItem.Size(m)
}
func (m *KVItem) XXX_DiscardUnknown() {
	xxx_messageInfo_KVItem.DiscardUnknown(m)
}

var xxx_messageInfo_KVItem proto.InternalMessageInfo

func (m *KVItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InsertResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Key                  []string   `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	TraceInfo            *TraceInfo `protobuf:"bytes,3,opt,name=trace_info,json=traceInfo,proto3" json:"trace_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InsertResponse) Reset()         { *m = InsertResponse{} }
func (m *InsertResponse) String() string { return proto.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()    {}
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{2}
}
func (m *InsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResponse.Unmarshal(m, b)
}
func (m *InsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResponse.Marshal(b, m, deterministic)
}
func (dst *InsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResponse.Merge(dst, src)
}
func (m *InsertResponse) XXX_Size() int {
	return xxx_messageInfo_InsertResponse.Size(m)
}
func (m *InsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResponse proto.InternalMessageInfo

func (m *InsertResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *InsertResponse) GetKey() []string {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *InsertResponse) GetTraceInfo() *TraceInfo {
	if m != nil {
		return m.TraceInfo
	}
	return nil
}

type RemoveRequest struct {
	RegionName           string   `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	Key                  []string `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	TraceEnabled         bool     `protobuf:"varint,3,opt,name=trace_enabled,json=traceEnabled,proto3" json:"trace_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{3}
}
func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(dst, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *RemoveRequest) GetKey() []string {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RemoveRequest) GetTraceEnabled() bool {
	if m != nil {
		return m.TraceEnabled
	}
	return false
}

type RemoveResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Key                  []string   `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	TraceInfo            *TraceInfo `protobuf:"bytes,3,opt,name=trace_info,json=traceInfo,proto3" json:"trace_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{4}
}
func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(dst, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

func (m *RemoveResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RemoveResponse) GetKey() []string {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RemoveResponse) GetTraceInfo() *TraceInfo {
	if m != nil {
		return m.TraceInfo
	}
	return nil
}

type ParaRequest struct {
	ParameterName        string   `protobuf:"bytes,1,opt,name=parameter_name,json=parameterName,proto3" json:"parameter_name,omitempty"`
	ParameterValue       string   `protobuf:"bytes,2,opt,name=parameter_value,json=parameterValue,proto3" json:"parameter_value,omitempty"`
	TraceEnable          bool     `protobuf:"varint,3,opt,name=trace_enable,json=traceEnable,proto3" json:"trace_enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParaRequest) Reset()         { *m = ParaRequest{} }
func (m *ParaRequest) String() string { return proto.CompactTextString(m) }
func (*ParaRequest) ProtoMessage()    {}
func (*ParaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{5}
}
func (m *ParaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParaRequest.Unmarshal(m, b)
}
func (m *ParaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParaRequest.Marshal(b, m, deterministic)
}
func (dst *ParaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParaRequest.Merge(dst, src)
}
func (m *ParaRequest) XXX_Size() int {
	return xxx_messageInfo_ParaRequest.Size(m)
}
func (m *ParaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParaRequest proto.InternalMessageInfo

func (m *ParaRequest) GetParameterName() string {
	if m != nil {
		return m.ParameterName
	}
	return ""
}

func (m *ParaRequest) GetParameterValue() string {
	if m != nil {
		return m.ParameterValue
	}
	return ""
}

func (m *ParaRequest) GetTraceEnable() bool {
	if m != nil {
		return m.TraceEnable
	}
	return false
}

type ParaResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	TraceInfo            *TraceInfo `protobuf:"bytes,2,opt,name=trace_info,json=traceInfo,proto3" json:"trace_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ParaResponse) Reset()         { *m = ParaResponse{} }
func (m *ParaResponse) String() string { return proto.CompactTextString(m) }
func (*ParaResponse) ProtoMessage()    {}
func (*ParaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{6}
}
func (m *ParaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParaResponse.Unmarshal(m, b)
}
func (m *ParaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParaResponse.Marshal(b, m, deterministic)
}
func (dst *ParaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParaResponse.Merge(dst, src)
}
func (m *ParaResponse) XXX_Size() int {
	return xxx_messageInfo_ParaResponse.Size(m)
}
func (m *ParaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParaResponse proto.InternalMessageInfo

func (m *ParaResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ParaResponse) GetTraceInfo() *TraceInfo {
	if m != nil {
		return m.TraceInfo
	}
	return nil
}

type QueryRequest struct {
	RegionName           string   `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	Query                []string `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty"`
	TraceEnabled         bool     `protobuf:"varint,3,opt,name=trace_enabled,json=traceEnabled,proto3" json:"trace_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{7}
}
func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (dst *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(dst, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *QueryRequest) GetQuery() []string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *QueryRequest) GetTraceEnabled() bool {
	if m != nil {
		return m.TraceEnabled
	}
	return false
}

type QueryResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                []string   `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	TraceInfo            *TraceInfo `protobuf:"bytes,3,opt,name=trace_info,json=traceInfo,proto3" json:"trace_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{8}
}
func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (dst *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(dst, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryResponse) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *QueryResponse) GetTraceInfo() *TraceInfo {
	if m != nil {
		return m.TraceInfo
	}
	return nil
}

type TraceInfo struct {
	ArrivalTime          uint64   `protobuf:"varint,1,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	DepartureTime        uint64   `protobuf:"varint,2,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceInfo) Reset()         { *m = TraceInfo{} }
func (m *TraceInfo) String() string { return proto.CompactTextString(m) }
func (*TraceInfo) ProtoMessage()    {}
func (*TraceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{9}
}
func (m *TraceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceInfo.Unmarshal(m, b)
}
func (m *TraceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceInfo.Marshal(b, m, deterministic)
}
func (dst *TraceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceInfo.Merge(dst, src)
}
func (m *TraceInfo) XXX_Size() int {
	return xxx_messageInfo_TraceInfo.Size(m)
}
func (m *TraceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TraceInfo proto.InternalMessageInfo

func (m *TraceInfo) GetArrivalTime() uint64 {
	if m != nil {
		return m.ArrivalTime
	}
	return 0
}

func (m *TraceInfo) GetDepartureTime() uint64 {
	if m != nil {
		return m.DepartureTime
	}
	return 0
}

type NFMessage struct {
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*NFMessage_Request
	//	*NFMessage_Response
	//	*NFMessage_ProtocolError
	Data                 isNFMessage_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NFMessage) Reset()         { *m = NFMessage{} }
func (m *NFMessage) String() string { return proto.CompactTextString(m) }
func (*NFMessage) ProtoMessage()    {}
func (*NFMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{10}
}
func (m *NFMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFMessage.Unmarshal(m, b)
}
func (m *NFMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFMessage.Marshal(b, m, deterministic)
}
func (dst *NFMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFMessage.Merge(dst, src)
}
func (m *NFMessage) XXX_Size() int {
	return xxx_messageInfo_NFMessage.Size(m)
}
func (m *NFMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NFMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NFMessage proto.InternalMessageInfo

func (m *NFMessage) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type isNFMessage_Data interface {
	isNFMessage_Data()
}

type NFMessage_Request struct {
	Request *NFRequest `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

type NFMessage_Response struct {
	Response *NFResponse `protobuf:"bytes,3,opt,name=response,proto3,oneof"`
}

type NFMessage_ProtocolError struct {
	ProtocolError *NFProtocolError `protobuf:"bytes,4,opt,name=protocol_error,json=protocolError,proto3,oneof"`
}

func (*NFMessage_Request) isNFMessage_Data() {}

func (*NFMessage_Response) isNFMessage_Data() {}

func (*NFMessage_ProtocolError) isNFMessage_Data() {}

func (m *NFMessage) GetData() isNFMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NFMessage) GetRequest() *NFRequest {
	if x, ok := m.GetData().(*NFMessage_Request); ok {
		return x.Request
	}
	return nil
}

func (m *NFMessage) GetResponse() *NFResponse {
	if x, ok := m.GetData().(*NFMessage_Response); ok {
		return x.Response
	}
	return nil
}

func (m *NFMessage) GetProtocolError() *NFProtocolError {
	if x, ok := m.GetData().(*NFMessage_ProtocolError); ok {
		return x.ProtocolError
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NFMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NFMessage_OneofMarshaler, _NFMessage_OneofUnmarshaler, _NFMessage_OneofSizer, []interface{}{
		(*NFMessage_Request)(nil),
		(*NFMessage_Response)(nil),
		(*NFMessage_ProtocolError)(nil),
	}
}

func _NFMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NFMessage)
	// data
	switch x := m.Data.(type) {
	case *NFMessage_Request:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Request); err != nil {
			return err
		}
	case *NFMessage_Response:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case *NFMessage_ProtocolError:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProtocolError); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NFMessage.Data has unexpected type %T", x)
	}
	return nil
}

func _NFMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NFMessage)
	switch tag {
	case 2: // data.request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NFRequest)
		err := b.DecodeMessage(msg)
		m.Data = &NFMessage_Request{msg}
		return true, err
	case 3: // data.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NFResponse)
		err := b.DecodeMessage(msg)
		m.Data = &NFMessage_Response{msg}
		return true, err
	case 4: // data.protocol_error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NFProtocolError)
		err := b.DecodeMessage(msg)
		m.Data = &NFMessage_ProtocolError{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NFMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NFMessage)
	// data
	switch x := m.Data.(type) {
	case *NFMessage_Request:
		s := proto.Size(x.Request)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFMessage_Response:
		s := proto.Size(x.Response)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFMessage_ProtocolError:
		s := proto.Size(x.ProtocolError)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NFRequest struct {
	// Types that are valid to be assigned to Data:
	//	*NFRequest_PutRequest
	//	*NFRequest_GetRequest
	//	*NFRequest_DelRequest
	Data                 isNFRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NFRequest) Reset()         { *m = NFRequest{} }
func (m *NFRequest) String() string { return proto.CompactTextString(m) }
func (*NFRequest) ProtoMessage()    {}
func (*NFRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{11}
}
func (m *NFRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFRequest.Unmarshal(m, b)
}
func (m *NFRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFRequest.Marshal(b, m, deterministic)
}
func (dst *NFRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFRequest.Merge(dst, src)
}
func (m *NFRequest) XXX_Size() int {
	return xxx_messageInfo_NFRequest.Size(m)
}
func (m *NFRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NFRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NFRequest proto.InternalMessageInfo

type isNFRequest_Data interface {
	isNFRequest_Data()
}

type NFRequest_PutRequest struct {
	PutRequest *PutRequest `protobuf:"bytes,1,opt,name=put_request,json=putRequest,proto3,oneof"`
}

type NFRequest_GetRequest struct {
	GetRequest *GetRequest `protobuf:"bytes,2,opt,name=get_request,json=getRequest,proto3,oneof"`
}

type NFRequest_DelRequest struct {
	DelRequest *DelRequest `protobuf:"bytes,3,opt,name=del_request,json=delRequest,proto3,oneof"`
}

func (*NFRequest_PutRequest) isNFRequest_Data() {}

func (*NFRequest_GetRequest) isNFRequest_Data() {}

func (*NFRequest_DelRequest) isNFRequest_Data() {}

func (m *NFRequest) GetData() isNFRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NFRequest) GetPutRequest() *PutRequest {
	if x, ok := m.GetData().(*NFRequest_PutRequest); ok {
		return x.PutRequest
	}
	return nil
}

func (m *NFRequest) GetGetRequest() *GetRequest {
	if x, ok := m.GetData().(*NFRequest_GetRequest); ok {
		return x.GetRequest
	}
	return nil
}

func (m *NFRequest) GetDelRequest() *DelRequest {
	if x, ok := m.GetData().(*NFRequest_DelRequest); ok {
		return x.DelRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NFRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NFRequest_OneofMarshaler, _NFRequest_OneofUnmarshaler, _NFRequest_OneofSizer, []interface{}{
		(*NFRequest_PutRequest)(nil),
		(*NFRequest_GetRequest)(nil),
		(*NFRequest_DelRequest)(nil),
	}
}

func _NFRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NFRequest)
	// data
	switch x := m.Data.(type) {
	case *NFRequest_PutRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutRequest); err != nil {
			return err
		}
	case *NFRequest_GetRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRequest); err != nil {
			return err
		}
	case *NFRequest_DelRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DelRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NFRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _NFRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NFRequest)
	switch tag {
	case 1: // data.put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &NFRequest_PutRequest{msg}
		return true, err
	case 2: // data.get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &NFRequest_GetRequest{msg}
		return true, err
	case 3: // data.del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &NFRequest_DelRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NFRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NFRequest)
	// data
	switch x := m.Data.(type) {
	case *NFRequest_PutRequest:
		s := proto.Size(x.PutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFRequest_GetRequest:
		s := proto.Size(x.GetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFRequest_DelRequest:
		s := proto.Size(x.DelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PutRequest struct {
	// Types that are valid to be assigned to Data:
	//	*PutRequest_NfProfilePutRequest
	//	*PutRequest_SubscriptionPutRequest
	//	*PutRequest_NrfAddressPutRequest
	//	*PutRequest_GroupProfilePutRequest
	//	*PutRequest_NrfProfilePutRequest
	//	*PutRequest_GpsiProfilePutRequest
	//	*PutRequest_CacheNfProfilePutRequest
	Data                 isPutRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{12}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (dst *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(dst, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

type isPutRequest_Data interface {
	isPutRequest_Data()
}

type PutRequest_NfProfilePutRequest struct {
	NfProfilePutRequest *nfprofile.NFProfilePutRequest `protobuf:"bytes,1,opt,name=nf_profile_put_request,json=nfProfilePutRequest,proto3,oneof"`
}

type PutRequest_SubscriptionPutRequest struct {
	SubscriptionPutRequest *subscription.SubscriptionPutRequest `protobuf:"bytes,2,opt,name=subscription_put_request,json=subscriptionPutRequest,proto3,oneof"`
}

type PutRequest_NrfAddressPutRequest struct {
	NrfAddressPutRequest *nrfaddress.NRFAddressPutRequest `protobuf:"bytes,3,opt,name=nrf_address_put_request,json=nrfAddressPutRequest,proto3,oneof"`
}

type PutRequest_GroupProfilePutRequest struct {
	GroupProfilePutRequest *groupprofile.GroupProfilePutRequest `protobuf:"bytes,4,opt,name=group_profile_put_request,json=groupProfilePutRequest,proto3,oneof"`
}

type PutRequest_NrfProfilePutRequest struct {
	NrfProfilePutRequest *nrfprofile.NRFProfilePutRequest `protobuf:"bytes,5,opt,name=nrf_profile_put_request,json=nrfProfilePutRequest,proto3,oneof"`
}

type PutRequest_GpsiProfilePutRequest struct {
	GpsiProfilePutRequest *gpsiprofile.GpsiProfilePutRequest `protobuf:"bytes,6,opt,name=gpsi_profile_put_request,json=gpsiProfilePutRequest,proto3,oneof"`
}

type PutRequest_CacheNfProfilePutRequest struct {
	CacheNfProfilePutRequest *cachenfprofile.CacheNFProfilePutRequest `protobuf:"bytes,7,opt,name=cache_nf_profile_put_request,json=cacheNfProfilePutRequest,proto3,oneof"`
}

func (*PutRequest_NfProfilePutRequest) isPutRequest_Data() {}

func (*PutRequest_SubscriptionPutRequest) isPutRequest_Data() {}

func (*PutRequest_NrfAddressPutRequest) isPutRequest_Data() {}

func (*PutRequest_GroupProfilePutRequest) isPutRequest_Data() {}

func (*PutRequest_NrfProfilePutRequest) isPutRequest_Data() {}

func (*PutRequest_GpsiProfilePutRequest) isPutRequest_Data() {}

func (*PutRequest_CacheNfProfilePutRequest) isPutRequest_Data() {}

func (m *PutRequest) GetData() isPutRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PutRequest) GetNfProfilePutRequest() *nfprofile.NFProfilePutRequest {
	if x, ok := m.GetData().(*PutRequest_NfProfilePutRequest); ok {
		return x.NfProfilePutRequest
	}
	return nil
}

func (m *PutRequest) GetSubscriptionPutRequest() *subscription.SubscriptionPutRequest {
	if x, ok := m.GetData().(*PutRequest_SubscriptionPutRequest); ok {
		return x.SubscriptionPutRequest
	}
	return nil
}

func (m *PutRequest) GetNrfAddressPutRequest() *nrfaddress.NRFAddressPutRequest {
	if x, ok := m.GetData().(*PutRequest_NrfAddressPutRequest); ok {
		return x.NrfAddressPutRequest
	}
	return nil
}

func (m *PutRequest) GetGroupProfilePutRequest() *groupprofile.GroupProfilePutRequest {
	if x, ok := m.GetData().(*PutRequest_GroupProfilePutRequest); ok {
		return x.GroupProfilePutRequest
	}
	return nil
}

func (m *PutRequest) GetNrfProfilePutRequest() *nrfprofile.NRFProfilePutRequest {
	if x, ok := m.GetData().(*PutRequest_NrfProfilePutRequest); ok {
		return x.NrfProfilePutRequest
	}
	return nil
}

func (m *PutRequest) GetGpsiProfilePutRequest() *gpsiprofile.GpsiProfilePutRequest {
	if x, ok := m.GetData().(*PutRequest_GpsiProfilePutRequest); ok {
		return x.GpsiProfilePutRequest
	}
	return nil
}

func (m *PutRequest) GetCacheNfProfilePutRequest() *cachenfprofile.CacheNFProfilePutRequest {
	if x, ok := m.GetData().(*PutRequest_CacheNfProfilePutRequest); ok {
		return x.CacheNfProfilePutRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PutRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PutRequest_OneofMarshaler, _PutRequest_OneofUnmarshaler, _PutRequest_OneofSizer, []interface{}{
		(*PutRequest_NfProfilePutRequest)(nil),
		(*PutRequest_SubscriptionPutRequest)(nil),
		(*PutRequest_NrfAddressPutRequest)(nil),
		(*PutRequest_GroupProfilePutRequest)(nil),
		(*PutRequest_NrfProfilePutRequest)(nil),
		(*PutRequest_GpsiProfilePutRequest)(nil),
		(*PutRequest_CacheNfProfilePutRequest)(nil),
	}
}

func _PutRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PutRequest)
	// data
	switch x := m.Data.(type) {
	case *PutRequest_NfProfilePutRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfilePutRequest); err != nil {
			return err
		}
	case *PutRequest_SubscriptionPutRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionPutRequest); err != nil {
			return err
		}
	case *PutRequest_NrfAddressPutRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressPutRequest); err != nil {
			return err
		}
	case *PutRequest_GroupProfilePutRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfilePutRequest); err != nil {
			return err
		}
	case *PutRequest_NrfProfilePutRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfilePutRequest); err != nil {
			return err
		}
	case *PutRequest_GpsiProfilePutRequest:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfilePutRequest); err != nil {
			return err
		}
	case *PutRequest_CacheNfProfilePutRequest:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CacheNfProfilePutRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PutRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _PutRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PutRequest)
	switch tag {
	case 1: // data.nf_profile_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfilePutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_NfProfilePutRequest{msg}
		return true, err
	case 2: // data.subscription_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionPutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_SubscriptionPutRequest{msg}
		return true, err
	case 3: // data.nrf_address_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressPutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_NrfAddressPutRequest{msg}
		return true, err
	case 4: // data.group_profile_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfilePutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_GroupProfilePutRequest{msg}
		return true, err
	case 5: // data.nrf_profile_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfilePutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_NrfProfilePutRequest{msg}
		return true, err
	case 6: // data.gpsi_profile_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfilePutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_GpsiProfilePutRequest{msg}
		return true, err
	case 7: // data.cache_nf_profile_put_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(cachenfprofile.CacheNFProfilePutRequest)
		err := b.DecodeMessage(msg)
		m.Data = &PutRequest_CacheNfProfilePutRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PutRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PutRequest)
	// data
	switch x := m.Data.(type) {
	case *PutRequest_NfProfilePutRequest:
		s := proto.Size(x.NfProfilePutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_SubscriptionPutRequest:
		s := proto.Size(x.SubscriptionPutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_NrfAddressPutRequest:
		s := proto.Size(x.NrfAddressPutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_GroupProfilePutRequest:
		s := proto.Size(x.GroupProfilePutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_NrfProfilePutRequest:
		s := proto.Size(x.NrfProfilePutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_GpsiProfilePutRequest:
		s := proto.Size(x.GpsiProfilePutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutRequest_CacheNfProfilePutRequest:
		s := proto.Size(x.CacheNfProfilePutRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetRequest struct {
	// Types that are valid to be assigned to Data:
	//	*GetRequest_NfProfileGetRequest
	//	*GetRequest_SubscriptionGetRequest
	//	*GetRequest_NrfAddressGetRequest
	//	*GetRequest_GroupProfileGetRequest
	//	*GetRequest_NrfProfileGetRequest
	//	*GetRequest_ImsiprefixProfileGetRequest
	//	*GetRequest_GpsiProfileGetRequest
	//	*GetRequest_GpsiprefixProfileGetRequest
	//	*GetRequest_NfProfileCountGetRequest
	//	*GetRequest_CacheNfProfileGetRequest
	Data                 isGetRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{13}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type isGetRequest_Data interface {
	isGetRequest_Data()
}

type GetRequest_NfProfileGetRequest struct {
	NfProfileGetRequest *nfprofile.NFProfileGetRequest `protobuf:"bytes,1,opt,name=nf_profile_get_request,json=nfProfileGetRequest,proto3,oneof"`
}

type GetRequest_SubscriptionGetRequest struct {
	SubscriptionGetRequest *subscription.SubscriptionGetRequest `protobuf:"bytes,2,opt,name=subscription_get_request,json=subscriptionGetRequest,proto3,oneof"`
}

type GetRequest_NrfAddressGetRequest struct {
	NrfAddressGetRequest *nrfaddress.NRFAddressGetRequest `protobuf:"bytes,3,opt,name=nrf_address_get_request,json=nrfAddressGetRequest,proto3,oneof"`
}

type GetRequest_GroupProfileGetRequest struct {
	GroupProfileGetRequest *groupprofile.GroupProfileGetRequest `protobuf:"bytes,4,opt,name=group_profile_get_request,json=groupProfileGetRequest,proto3,oneof"`
}

type GetRequest_NrfProfileGetRequest struct {
	NrfProfileGetRequest *nrfprofile.NRFProfileGetRequest `protobuf:"bytes,5,opt,name=nrf_profile_get_request,json=nrfProfileGetRequest,proto3,oneof"`
}

type GetRequest_ImsiprefixProfileGetRequest struct {
	ImsiprefixProfileGetRequest *imsiprefixprofile.ImsiprefixProfileGetRequest `protobuf:"bytes,6,opt,name=imsiprefix_profile_get_request,json=imsiprefixProfileGetRequest,proto3,oneof"`
}

type GetRequest_GpsiProfileGetRequest struct {
	GpsiProfileGetRequest *gpsiprofile.GpsiProfileGetRequest `protobuf:"bytes,7,opt,name=gpsi_profile_get_request,json=gpsiProfileGetRequest,proto3,oneof"`
}

type GetRequest_GpsiprefixProfileGetRequest struct {
	GpsiprefixProfileGetRequest *gpsiprefixprofile.GpsiprefixProfileGetRequest `protobuf:"bytes,8,opt,name=gpsiprefix_profile_get_request,json=gpsiprefixProfileGetRequest,proto3,oneof"`
}

type GetRequest_NfProfileCountGetRequest struct {
	NfProfileCountGetRequest *nfprofile.NFProfileCountGetRequest `protobuf:"bytes,9,opt,name=nf_profile_count_get_request,json=nfProfileCountGetRequest,proto3,oneof"`
}

type GetRequest_CacheNfProfileGetRequest struct {
	CacheNfProfileGetRequest *cachenfprofile.CacheNFProfileGetRequest `protobuf:"bytes,10,opt,name=cache_nf_profile_get_request,json=cacheNfProfileGetRequest,proto3,oneof"`
}

func (*GetRequest_NfProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_SubscriptionGetRequest) isGetRequest_Data() {}

func (*GetRequest_NrfAddressGetRequest) isGetRequest_Data() {}

func (*GetRequest_GroupProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_NrfProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_ImsiprefixProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_GpsiProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_GpsiprefixProfileGetRequest) isGetRequest_Data() {}

func (*GetRequest_NfProfileCountGetRequest) isGetRequest_Data() {}

func (*GetRequest_CacheNfProfileGetRequest) isGetRequest_Data() {}

func (m *GetRequest) GetData() isGetRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetRequest) GetNfProfileGetRequest() *nfprofile.NFProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_NfProfileGetRequest); ok {
		return x.NfProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetSubscriptionGetRequest() *subscription.SubscriptionGetRequest {
	if x, ok := m.GetData().(*GetRequest_SubscriptionGetRequest); ok {
		return x.SubscriptionGetRequest
	}
	return nil
}

func (m *GetRequest) GetNrfAddressGetRequest() *nrfaddress.NRFAddressGetRequest {
	if x, ok := m.GetData().(*GetRequest_NrfAddressGetRequest); ok {
		return x.NrfAddressGetRequest
	}
	return nil
}

func (m *GetRequest) GetGroupProfileGetRequest() *groupprofile.GroupProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_GroupProfileGetRequest); ok {
		return x.GroupProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetNrfProfileGetRequest() *nrfprofile.NRFProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_NrfProfileGetRequest); ok {
		return x.NrfProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetImsiprefixProfileGetRequest() *imsiprefixprofile.ImsiprefixProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_ImsiprefixProfileGetRequest); ok {
		return x.ImsiprefixProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetGpsiProfileGetRequest() *gpsiprofile.GpsiProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_GpsiProfileGetRequest); ok {
		return x.GpsiProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetGpsiprefixProfileGetRequest() *gpsiprefixprofile.GpsiprefixProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_GpsiprefixProfileGetRequest); ok {
		return x.GpsiprefixProfileGetRequest
	}
	return nil
}

func (m *GetRequest) GetNfProfileCountGetRequest() *nfprofile.NFProfileCountGetRequest {
	if x, ok := m.GetData().(*GetRequest_NfProfileCountGetRequest); ok {
		return x.NfProfileCountGetRequest
	}
	return nil
}

func (m *GetRequest) GetCacheNfProfileGetRequest() *cachenfprofile.CacheNFProfileGetRequest {
	if x, ok := m.GetData().(*GetRequest_CacheNfProfileGetRequest); ok {
		return x.CacheNfProfileGetRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetRequest_OneofMarshaler, _GetRequest_OneofUnmarshaler, _GetRequest_OneofSizer, []interface{}{
		(*GetRequest_NfProfileGetRequest)(nil),
		(*GetRequest_SubscriptionGetRequest)(nil),
		(*GetRequest_NrfAddressGetRequest)(nil),
		(*GetRequest_GroupProfileGetRequest)(nil),
		(*GetRequest_NrfProfileGetRequest)(nil),
		(*GetRequest_ImsiprefixProfileGetRequest)(nil),
		(*GetRequest_GpsiProfileGetRequest)(nil),
		(*GetRequest_GpsiprefixProfileGetRequest)(nil),
		(*GetRequest_NfProfileCountGetRequest)(nil),
		(*GetRequest_CacheNfProfileGetRequest)(nil),
	}
}

func _GetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetRequest)
	// data
	switch x := m.Data.(type) {
	case *GetRequest_NfProfileGetRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_SubscriptionGetRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionGetRequest); err != nil {
			return err
		}
	case *GetRequest_NrfAddressGetRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressGetRequest); err != nil {
			return err
		}
	case *GetRequest_GroupProfileGetRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_NrfProfileGetRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_ImsiprefixProfileGetRequest:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImsiprefixProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_GpsiProfileGetRequest:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_GpsiprefixProfileGetRequest:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiprefixProfileGetRequest); err != nil {
			return err
		}
	case *GetRequest_NfProfileCountGetRequest:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileCountGetRequest); err != nil {
			return err
		}
	case *GetRequest_CacheNfProfileGetRequest:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CacheNfProfileGetRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _GetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetRequest)
	switch tag {
	case 1: // data.nf_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_NfProfileGetRequest{msg}
		return true, err
	case 2: // data.subscription_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_SubscriptionGetRequest{msg}
		return true, err
	case 3: // data.nrf_address_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_NrfAddressGetRequest{msg}
		return true, err
	case 4: // data.group_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_GroupProfileGetRequest{msg}
		return true, err
	case 5: // data.nrf_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_NrfProfileGetRequest{msg}
		return true, err
	case 6: // data.imsiprefix_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(imsiprefixprofile.ImsiprefixProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_ImsiprefixProfileGetRequest{msg}
		return true, err
	case 7: // data.gpsi_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_GpsiProfileGetRequest{msg}
		return true, err
	case 8: // data.gpsiprefix_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprefixprofile.GpsiprefixProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_GpsiprefixProfileGetRequest{msg}
		return true, err
	case 9: // data.nf_profile_count_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileCountGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_NfProfileCountGetRequest{msg}
		return true, err
	case 10: // data.cache_nf_profile_get_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(cachenfprofile.CacheNFProfileGetRequest)
		err := b.DecodeMessage(msg)
		m.Data = &GetRequest_CacheNfProfileGetRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetRequest)
	// data
	switch x := m.Data.(type) {
	case *GetRequest_NfProfileGetRequest:
		s := proto.Size(x.NfProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_SubscriptionGetRequest:
		s := proto.Size(x.SubscriptionGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_NrfAddressGetRequest:
		s := proto.Size(x.NrfAddressGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_GroupProfileGetRequest:
		s := proto.Size(x.GroupProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_NrfProfileGetRequest:
		s := proto.Size(x.NrfProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_ImsiprefixProfileGetRequest:
		s := proto.Size(x.ImsiprefixProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_GpsiProfileGetRequest:
		s := proto.Size(x.GpsiProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_GpsiprefixProfileGetRequest:
		s := proto.Size(x.GpsiprefixProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_NfProfileCountGetRequest:
		s := proto.Size(x.NfProfileCountGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetRequest_CacheNfProfileGetRequest:
		s := proto.Size(x.CacheNfProfileGetRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DelRequest struct {
	// Types that are valid to be assigned to Data:
	//	*DelRequest_NfProfileDelRequest
	//	*DelRequest_SubscriptionDelRequest
	//	*DelRequest_NrfAddressDelRequest
	//	*DelRequest_GroupProfileDelRequest
	//	*DelRequest_NrfProfileDelRequest
	//	*DelRequest_GpsiProfileDelRequest
	Data                 isDelRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DelRequest) Reset()         { *m = DelRequest{} }
func (m *DelRequest) String() string { return proto.CompactTextString(m) }
func (*DelRequest) ProtoMessage()    {}
func (*DelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{14}
}
func (m *DelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRequest.Unmarshal(m, b)
}
func (m *DelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRequest.Marshal(b, m, deterministic)
}
func (dst *DelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRequest.Merge(dst, src)
}
func (m *DelRequest) XXX_Size() int {
	return xxx_messageInfo_DelRequest.Size(m)
}
func (m *DelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelRequest proto.InternalMessageInfo

type isDelRequest_Data interface {
	isDelRequest_Data()
}

type DelRequest_NfProfileDelRequest struct {
	NfProfileDelRequest *nfprofile.NFProfileDelRequest `protobuf:"bytes,1,opt,name=nf_profile_del_request,json=nfProfileDelRequest,proto3,oneof"`
}

type DelRequest_SubscriptionDelRequest struct {
	SubscriptionDelRequest *subscription.SubscriptionDelRequest `protobuf:"bytes,2,opt,name=subscription_del_request,json=subscriptionDelRequest,proto3,oneof"`
}

type DelRequest_NrfAddressDelRequest struct {
	NrfAddressDelRequest *nrfaddress.NRFAddressDelRequest `protobuf:"bytes,3,opt,name=nrf_address_del_request,json=nrfAddressDelRequest,proto3,oneof"`
}

type DelRequest_GroupProfileDelRequest struct {
	GroupProfileDelRequest *groupprofile.GroupProfileDelRequest `protobuf:"bytes,4,opt,name=group_profile_del_request,json=groupProfileDelRequest,proto3,oneof"`
}

type DelRequest_NrfProfileDelRequest struct {
	NrfProfileDelRequest *nrfprofile.NRFProfileDelRequest `protobuf:"bytes,5,opt,name=nrf_profile_del_request,json=nrfProfileDelRequest,proto3,oneof"`
}

type DelRequest_GpsiProfileDelRequest struct {
	GpsiProfileDelRequest *gpsiprofile.GpsiProfileDelRequest `protobuf:"bytes,6,opt,name=gpsi_profile_del_request,json=gpsiProfileDelRequest,proto3,oneof"`
}

func (*DelRequest_NfProfileDelRequest) isDelRequest_Data() {}

func (*DelRequest_SubscriptionDelRequest) isDelRequest_Data() {}

func (*DelRequest_NrfAddressDelRequest) isDelRequest_Data() {}

func (*DelRequest_GroupProfileDelRequest) isDelRequest_Data() {}

func (*DelRequest_NrfProfileDelRequest) isDelRequest_Data() {}

func (*DelRequest_GpsiProfileDelRequest) isDelRequest_Data() {}

func (m *DelRequest) GetData() isDelRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DelRequest) GetNfProfileDelRequest() *nfprofile.NFProfileDelRequest {
	if x, ok := m.GetData().(*DelRequest_NfProfileDelRequest); ok {
		return x.NfProfileDelRequest
	}
	return nil
}

func (m *DelRequest) GetSubscriptionDelRequest() *subscription.SubscriptionDelRequest {
	if x, ok := m.GetData().(*DelRequest_SubscriptionDelRequest); ok {
		return x.SubscriptionDelRequest
	}
	return nil
}

func (m *DelRequest) GetNrfAddressDelRequest() *nrfaddress.NRFAddressDelRequest {
	if x, ok := m.GetData().(*DelRequest_NrfAddressDelRequest); ok {
		return x.NrfAddressDelRequest
	}
	return nil
}

func (m *DelRequest) GetGroupProfileDelRequest() *groupprofile.GroupProfileDelRequest {
	if x, ok := m.GetData().(*DelRequest_GroupProfileDelRequest); ok {
		return x.GroupProfileDelRequest
	}
	return nil
}

func (m *DelRequest) GetNrfProfileDelRequest() *nrfprofile.NRFProfileDelRequest {
	if x, ok := m.GetData().(*DelRequest_NrfProfileDelRequest); ok {
		return x.NrfProfileDelRequest
	}
	return nil
}

func (m *DelRequest) GetGpsiProfileDelRequest() *gpsiprofile.GpsiProfileDelRequest {
	if x, ok := m.GetData().(*DelRequest_GpsiProfileDelRequest); ok {
		return x.GpsiProfileDelRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DelRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DelRequest_OneofMarshaler, _DelRequest_OneofUnmarshaler, _DelRequest_OneofSizer, []interface{}{
		(*DelRequest_NfProfileDelRequest)(nil),
		(*DelRequest_SubscriptionDelRequest)(nil),
		(*DelRequest_NrfAddressDelRequest)(nil),
		(*DelRequest_GroupProfileDelRequest)(nil),
		(*DelRequest_NrfProfileDelRequest)(nil),
		(*DelRequest_GpsiProfileDelRequest)(nil),
	}
}

func _DelRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DelRequest)
	// data
	switch x := m.Data.(type) {
	case *DelRequest_NfProfileDelRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileDelRequest); err != nil {
			return err
		}
	case *DelRequest_SubscriptionDelRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionDelRequest); err != nil {
			return err
		}
	case *DelRequest_NrfAddressDelRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressDelRequest); err != nil {
			return err
		}
	case *DelRequest_GroupProfileDelRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfileDelRequest); err != nil {
			return err
		}
	case *DelRequest_NrfProfileDelRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfileDelRequest); err != nil {
			return err
		}
	case *DelRequest_GpsiProfileDelRequest:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfileDelRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DelRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _DelRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DelRequest)
	switch tag {
	case 1: // data.nf_profile_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_NfProfileDelRequest{msg}
		return true, err
	case 2: // data.subscription_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_SubscriptionDelRequest{msg}
		return true, err
	case 3: // data.nrf_address_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_NrfAddressDelRequest{msg}
		return true, err
	case 4: // data.group_profile_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfileDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_GroupProfileDelRequest{msg}
		return true, err
	case 5: // data.nrf_profile_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfileDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_NrfProfileDelRequest{msg}
		return true, err
	case 6: // data.gpsi_profile_del_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfileDelRequest)
		err := b.DecodeMessage(msg)
		m.Data = &DelRequest_GpsiProfileDelRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DelRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DelRequest)
	// data
	switch x := m.Data.(type) {
	case *DelRequest_NfProfileDelRequest:
		s := proto.Size(x.NfProfileDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelRequest_SubscriptionDelRequest:
		s := proto.Size(x.SubscriptionDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelRequest_NrfAddressDelRequest:
		s := proto.Size(x.NrfAddressDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelRequest_GroupProfileDelRequest:
		s := proto.Size(x.GroupProfileDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelRequest_NrfProfileDelRequest:
		s := proto.Size(x.NrfProfileDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelRequest_GpsiProfileDelRequest:
		s := proto.Size(x.GpsiProfileDelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NFResponse struct {
	// Types that are valid to be assigned to Data:
	//	*NFResponse_PutResponse
	//	*NFResponse_GetResponse
	//	*NFResponse_DelResponse
	Data                 isNFResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NFResponse) Reset()         { *m = NFResponse{} }
func (m *NFResponse) String() string { return proto.CompactTextString(m) }
func (*NFResponse) ProtoMessage()    {}
func (*NFResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{15}
}
func (m *NFResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFResponse.Unmarshal(m, b)
}
func (m *NFResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFResponse.Marshal(b, m, deterministic)
}
func (dst *NFResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFResponse.Merge(dst, src)
}
func (m *NFResponse) XXX_Size() int {
	return xxx_messageInfo_NFResponse.Size(m)
}
func (m *NFResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NFResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NFResponse proto.InternalMessageInfo

type isNFResponse_Data interface {
	isNFResponse_Data()
}

type NFResponse_PutResponse struct {
	PutResponse *PutResponse `protobuf:"bytes,1,opt,name=put_response,json=putResponse,proto3,oneof"`
}

type NFResponse_GetResponse struct {
	GetResponse *GetResponse `protobuf:"bytes,2,opt,name=get_response,json=getResponse,proto3,oneof"`
}

type NFResponse_DelResponse struct {
	DelResponse *DelResponse `protobuf:"bytes,3,opt,name=del_response,json=delResponse,proto3,oneof"`
}

func (*NFResponse_PutResponse) isNFResponse_Data() {}

func (*NFResponse_GetResponse) isNFResponse_Data() {}

func (*NFResponse_DelResponse) isNFResponse_Data() {}

func (m *NFResponse) GetData() isNFResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NFResponse) GetPutResponse() *PutResponse {
	if x, ok := m.GetData().(*NFResponse_PutResponse); ok {
		return x.PutResponse
	}
	return nil
}

func (m *NFResponse) GetGetResponse() *GetResponse {
	if x, ok := m.GetData().(*NFResponse_GetResponse); ok {
		return x.GetResponse
	}
	return nil
}

func (m *NFResponse) GetDelResponse() *DelResponse {
	if x, ok := m.GetData().(*NFResponse_DelResponse); ok {
		return x.DelResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NFResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NFResponse_OneofMarshaler, _NFResponse_OneofUnmarshaler, _NFResponse_OneofSizer, []interface{}{
		(*NFResponse_PutResponse)(nil),
		(*NFResponse_GetResponse)(nil),
		(*NFResponse_DelResponse)(nil),
	}
}

func _NFResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NFResponse)
	// data
	switch x := m.Data.(type) {
	case *NFResponse_PutResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutResponse); err != nil {
			return err
		}
	case *NFResponse_GetResponse:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetResponse); err != nil {
			return err
		}
	case *NFResponse_DelResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DelResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NFResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _NFResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NFResponse)
	switch tag {
	case 1: // data.put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &NFResponse_PutResponse{msg}
		return true, err
	case 2: // data.get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &NFResponse_GetResponse{msg}
		return true, err
	case 3: // data.del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &NFResponse_DelResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NFResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NFResponse)
	// data
	switch x := m.Data.(type) {
	case *NFResponse_PutResponse:
		s := proto.Size(x.PutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFResponse_GetResponse:
		s := proto.Size(x.GetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NFResponse_DelResponse:
		s := proto.Size(x.DelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PutResponse struct {
	// Types that are valid to be assigned to Data:
	//	*PutResponse_NfProfilePutResponse
	//	*PutResponse_SubscriptionPutResponse
	//	*PutResponse_NrfAddressPutResponse
	//	*PutResponse_GroupProfilePutResponse
	//	*PutResponse_NrfProfilePutResponse
	//	*PutResponse_GpsiProfilePutResponse
	//	*PutResponse_CacheNfProfilePutResponse
	Data                 isPutResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{16}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (dst *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(dst, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

type isPutResponse_Data interface {
	isPutResponse_Data()
}

type PutResponse_NfProfilePutResponse struct {
	NfProfilePutResponse *nfprofile.NFProfilePutResponse `protobuf:"bytes,1,opt,name=nf_profile_put_response,json=nfProfilePutResponse,proto3,oneof"`
}

type PutResponse_SubscriptionPutResponse struct {
	SubscriptionPutResponse *subscription.SubscriptionPutResponse `protobuf:"bytes,2,opt,name=subscription_put_response,json=subscriptionPutResponse,proto3,oneof"`
}

type PutResponse_NrfAddressPutResponse struct {
	NrfAddressPutResponse *nrfaddress.NRFAddressPutResponse `protobuf:"bytes,3,opt,name=nrf_address_put_response,json=nrfAddressPutResponse,proto3,oneof"`
}

type PutResponse_GroupProfilePutResponse struct {
	GroupProfilePutResponse *groupprofile.GroupProfilePutResponse `protobuf:"bytes,4,opt,name=group_profile_put_response,json=groupProfilePutResponse,proto3,oneof"`
}

type PutResponse_NrfProfilePutResponse struct {
	NrfProfilePutResponse *nrfprofile.NRFProfilePutResponse `protobuf:"bytes,5,opt,name=nrf_profile_put_response,json=nrfProfilePutResponse,proto3,oneof"`
}

type PutResponse_GpsiProfilePutResponse struct {
	GpsiProfilePutResponse *gpsiprofile.GpsiProfilePutResponse `protobuf:"bytes,6,opt,name=gpsi_profile_put_response,json=gpsiProfilePutResponse,proto3,oneof"`
}

type PutResponse_CacheNfProfilePutResponse struct {
	CacheNfProfilePutResponse *cachenfprofile.CacheNFProfilePutResponse `protobuf:"bytes,7,opt,name=cache_nf_profile_put_response,json=cacheNfProfilePutResponse,proto3,oneof"`
}

func (*PutResponse_NfProfilePutResponse) isPutResponse_Data() {}

func (*PutResponse_SubscriptionPutResponse) isPutResponse_Data() {}

func (*PutResponse_NrfAddressPutResponse) isPutResponse_Data() {}

func (*PutResponse_GroupProfilePutResponse) isPutResponse_Data() {}

func (*PutResponse_NrfProfilePutResponse) isPutResponse_Data() {}

func (*PutResponse_GpsiProfilePutResponse) isPutResponse_Data() {}

func (*PutResponse_CacheNfProfilePutResponse) isPutResponse_Data() {}

func (m *PutResponse) GetData() isPutResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PutResponse) GetNfProfilePutResponse() *nfprofile.NFProfilePutResponse {
	if x, ok := m.GetData().(*PutResponse_NfProfilePutResponse); ok {
		return x.NfProfilePutResponse
	}
	return nil
}

func (m *PutResponse) GetSubscriptionPutResponse() *subscription.SubscriptionPutResponse {
	if x, ok := m.GetData().(*PutResponse_SubscriptionPutResponse); ok {
		return x.SubscriptionPutResponse
	}
	return nil
}

func (m *PutResponse) GetNrfAddressPutResponse() *nrfaddress.NRFAddressPutResponse {
	if x, ok := m.GetData().(*PutResponse_NrfAddressPutResponse); ok {
		return x.NrfAddressPutResponse
	}
	return nil
}

func (m *PutResponse) GetGroupProfilePutResponse() *groupprofile.GroupProfilePutResponse {
	if x, ok := m.GetData().(*PutResponse_GroupProfilePutResponse); ok {
		return x.GroupProfilePutResponse
	}
	return nil
}

func (m *PutResponse) GetNrfProfilePutResponse() *nrfprofile.NRFProfilePutResponse {
	if x, ok := m.GetData().(*PutResponse_NrfProfilePutResponse); ok {
		return x.NrfProfilePutResponse
	}
	return nil
}

func (m *PutResponse) GetGpsiProfilePutResponse() *gpsiprofile.GpsiProfilePutResponse {
	if x, ok := m.GetData().(*PutResponse_GpsiProfilePutResponse); ok {
		return x.GpsiProfilePutResponse
	}
	return nil
}

func (m *PutResponse) GetCacheNfProfilePutResponse() *cachenfprofile.CacheNFProfilePutResponse {
	if x, ok := m.GetData().(*PutResponse_CacheNfProfilePutResponse); ok {
		return x.CacheNfProfilePutResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PutResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PutResponse_OneofMarshaler, _PutResponse_OneofUnmarshaler, _PutResponse_OneofSizer, []interface{}{
		(*PutResponse_NfProfilePutResponse)(nil),
		(*PutResponse_SubscriptionPutResponse)(nil),
		(*PutResponse_NrfAddressPutResponse)(nil),
		(*PutResponse_GroupProfilePutResponse)(nil),
		(*PutResponse_NrfProfilePutResponse)(nil),
		(*PutResponse_GpsiProfilePutResponse)(nil),
		(*PutResponse_CacheNfProfilePutResponse)(nil),
	}
}

func _PutResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PutResponse)
	// data
	switch x := m.Data.(type) {
	case *PutResponse_NfProfilePutResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfilePutResponse); err != nil {
			return err
		}
	case *PutResponse_SubscriptionPutResponse:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionPutResponse); err != nil {
			return err
		}
	case *PutResponse_NrfAddressPutResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressPutResponse); err != nil {
			return err
		}
	case *PutResponse_GroupProfilePutResponse:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfilePutResponse); err != nil {
			return err
		}
	case *PutResponse_NrfProfilePutResponse:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfilePutResponse); err != nil {
			return err
		}
	case *PutResponse_GpsiProfilePutResponse:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfilePutResponse); err != nil {
			return err
		}
	case *PutResponse_CacheNfProfilePutResponse:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CacheNfProfilePutResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PutResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _PutResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PutResponse)
	switch tag {
	case 1: // data.nf_profile_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfilePutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_NfProfilePutResponse{msg}
		return true, err
	case 2: // data.subscription_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionPutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_SubscriptionPutResponse{msg}
		return true, err
	case 3: // data.nrf_address_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressPutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_NrfAddressPutResponse{msg}
		return true, err
	case 4: // data.group_profile_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfilePutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_GroupProfilePutResponse{msg}
		return true, err
	case 5: // data.nrf_profile_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfilePutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_NrfProfilePutResponse{msg}
		return true, err
	case 6: // data.gpsi_profile_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfilePutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_GpsiProfilePutResponse{msg}
		return true, err
	case 7: // data.cache_nf_profile_put_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(cachenfprofile.CacheNFProfilePutResponse)
		err := b.DecodeMessage(msg)
		m.Data = &PutResponse_CacheNfProfilePutResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PutResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PutResponse)
	// data
	switch x := m.Data.(type) {
	case *PutResponse_NfProfilePutResponse:
		s := proto.Size(x.NfProfilePutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_SubscriptionPutResponse:
		s := proto.Size(x.SubscriptionPutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_NrfAddressPutResponse:
		s := proto.Size(x.NrfAddressPutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_GroupProfilePutResponse:
		s := proto.Size(x.GroupProfilePutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_NrfProfilePutResponse:
		s := proto.Size(x.NrfProfilePutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_GpsiProfilePutResponse:
		s := proto.Size(x.GpsiProfilePutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PutResponse_CacheNfProfilePutResponse:
		s := proto.Size(x.CacheNfProfilePutResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetResponse struct {
	// Types that are valid to be assigned to Data:
	//	*GetResponse_NfProfileGetResponse
	//	*GetResponse_SubscriptionGetResponse
	//	*GetResponse_NrfAddressGetResponse
	//	*GetResponse_GroupProfileGetResponse
	//	*GetResponse_NrfProfileGetResponse
	//	*GetResponse_ImsiprefixProfileGetResponse
	//	*GetResponse_GpsiProfileGetResponse
	//	*GetResponse_GpsiprefixProfileGetResponse
	//	*GetResponse_NfProfileCountGetResponse
	//	*GetResponse_CacheNfProfileGetResponse
	Data                 isGetResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{17}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

type isGetResponse_Data interface {
	isGetResponse_Data()
}

type GetResponse_NfProfileGetResponse struct {
	NfProfileGetResponse *nfprofile.NFProfileGetResponse `protobuf:"bytes,1,opt,name=nf_profile_get_response,json=nfProfileGetResponse,proto3,oneof"`
}

type GetResponse_SubscriptionGetResponse struct {
	SubscriptionGetResponse *subscription.SubscriptionGetResponse `protobuf:"bytes,2,opt,name=subscription_get_response,json=subscriptionGetResponse,proto3,oneof"`
}

type GetResponse_NrfAddressGetResponse struct {
	NrfAddressGetResponse *nrfaddress.NRFAddressGetResponse `protobuf:"bytes,3,opt,name=nrf_address_get_response,json=nrfAddressGetResponse,proto3,oneof"`
}

type GetResponse_GroupProfileGetResponse struct {
	GroupProfileGetResponse *groupprofile.GroupProfileGetResponse `protobuf:"bytes,4,opt,name=group_profile_get_response,json=groupProfileGetResponse,proto3,oneof"`
}

type GetResponse_NrfProfileGetResponse struct {
	NrfProfileGetResponse *nrfprofile.NRFProfileGetResponse `protobuf:"bytes,5,opt,name=nrf_profile_get_response,json=nrfProfileGetResponse,proto3,oneof"`
}

type GetResponse_ImsiprefixProfileGetResponse struct {
	ImsiprefixProfileGetResponse *imsiprefixprofile.ImsiprefixProfileGetResponse `protobuf:"bytes,6,opt,name=imsiprefix_profile_get_response,json=imsiprefixProfileGetResponse,proto3,oneof"`
}

type GetResponse_GpsiProfileGetResponse struct {
	GpsiProfileGetResponse *gpsiprofile.GpsiProfileGetResponse `protobuf:"bytes,7,opt,name=gpsi_profile_get_response,json=gpsiProfileGetResponse,proto3,oneof"`
}

type GetResponse_GpsiprefixProfileGetResponse struct {
	GpsiprefixProfileGetResponse *gpsiprefixprofile.GpsiprefixProfileGetResponse `protobuf:"bytes,8,opt,name=gpsiprefix_profile_get_response,json=gpsiprefixProfileGetResponse,proto3,oneof"`
}

type GetResponse_NfProfileCountGetResponse struct {
	NfProfileCountGetResponse *nfprofile.NFProfileCountGetResponse `protobuf:"bytes,9,opt,name=nf_profile_count_get_response,json=nfProfileCountGetResponse,proto3,oneof"`
}

type GetResponse_CacheNfProfileGetResponse struct {
	CacheNfProfileGetResponse *cachenfprofile.CacheNFProfileGetResponse `protobuf:"bytes,10,opt,name=cache_nf_profile_get_response,json=cacheNfProfileGetResponse,proto3,oneof"`
}

func (*GetResponse_NfProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_SubscriptionGetResponse) isGetResponse_Data() {}

func (*GetResponse_NrfAddressGetResponse) isGetResponse_Data() {}

func (*GetResponse_GroupProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_NrfProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_ImsiprefixProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_GpsiProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_GpsiprefixProfileGetResponse) isGetResponse_Data() {}

func (*GetResponse_NfProfileCountGetResponse) isGetResponse_Data() {}

func (*GetResponse_CacheNfProfileGetResponse) isGetResponse_Data() {}

func (m *GetResponse) GetData() isGetResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetResponse) GetNfProfileGetResponse() *nfprofile.NFProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_NfProfileGetResponse); ok {
		return x.NfProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetSubscriptionGetResponse() *subscription.SubscriptionGetResponse {
	if x, ok := m.GetData().(*GetResponse_SubscriptionGetResponse); ok {
		return x.SubscriptionGetResponse
	}
	return nil
}

func (m *GetResponse) GetNrfAddressGetResponse() *nrfaddress.NRFAddressGetResponse {
	if x, ok := m.GetData().(*GetResponse_NrfAddressGetResponse); ok {
		return x.NrfAddressGetResponse
	}
	return nil
}

func (m *GetResponse) GetGroupProfileGetResponse() *groupprofile.GroupProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_GroupProfileGetResponse); ok {
		return x.GroupProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetNrfProfileGetResponse() *nrfprofile.NRFProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_NrfProfileGetResponse); ok {
		return x.NrfProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetImsiprefixProfileGetResponse() *imsiprefixprofile.ImsiprefixProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_ImsiprefixProfileGetResponse); ok {
		return x.ImsiprefixProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetGpsiProfileGetResponse() *gpsiprofile.GpsiProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_GpsiProfileGetResponse); ok {
		return x.GpsiProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetGpsiprefixProfileGetResponse() *gpsiprefixprofile.GpsiprefixProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_GpsiprefixProfileGetResponse); ok {
		return x.GpsiprefixProfileGetResponse
	}
	return nil
}

func (m *GetResponse) GetNfProfileCountGetResponse() *nfprofile.NFProfileCountGetResponse {
	if x, ok := m.GetData().(*GetResponse_NfProfileCountGetResponse); ok {
		return x.NfProfileCountGetResponse
	}
	return nil
}

func (m *GetResponse) GetCacheNfProfileGetResponse() *cachenfprofile.CacheNFProfileGetResponse {
	if x, ok := m.GetData().(*GetResponse_CacheNfProfileGetResponse); ok {
		return x.CacheNfProfileGetResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetResponse_OneofMarshaler, _GetResponse_OneofUnmarshaler, _GetResponse_OneofSizer, []interface{}{
		(*GetResponse_NfProfileGetResponse)(nil),
		(*GetResponse_SubscriptionGetResponse)(nil),
		(*GetResponse_NrfAddressGetResponse)(nil),
		(*GetResponse_GroupProfileGetResponse)(nil),
		(*GetResponse_NrfProfileGetResponse)(nil),
		(*GetResponse_ImsiprefixProfileGetResponse)(nil),
		(*GetResponse_GpsiProfileGetResponse)(nil),
		(*GetResponse_GpsiprefixProfileGetResponse)(nil),
		(*GetResponse_NfProfileCountGetResponse)(nil),
		(*GetResponse_CacheNfProfileGetResponse)(nil),
	}
}

func _GetResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetResponse)
	// data
	switch x := m.Data.(type) {
	case *GetResponse_NfProfileGetResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_SubscriptionGetResponse:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionGetResponse); err != nil {
			return err
		}
	case *GetResponse_NrfAddressGetResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressGetResponse); err != nil {
			return err
		}
	case *GetResponse_GroupProfileGetResponse:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_NrfProfileGetResponse:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_ImsiprefixProfileGetResponse:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImsiprefixProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_GpsiProfileGetResponse:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_GpsiprefixProfileGetResponse:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiprefixProfileGetResponse); err != nil {
			return err
		}
	case *GetResponse_NfProfileCountGetResponse:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileCountGetResponse); err != nil {
			return err
		}
	case *GetResponse_CacheNfProfileGetResponse:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CacheNfProfileGetResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _GetResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetResponse)
	switch tag {
	case 1: // data.nf_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_NfProfileGetResponse{msg}
		return true, err
	case 2: // data.subscription_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_SubscriptionGetResponse{msg}
		return true, err
	case 3: // data.nrf_address_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_NrfAddressGetResponse{msg}
		return true, err
	case 4: // data.group_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_GroupProfileGetResponse{msg}
		return true, err
	case 5: // data.nrf_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_NrfProfileGetResponse{msg}
		return true, err
	case 6: // data.imsiprefix_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(imsiprefixprofile.ImsiprefixProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_ImsiprefixProfileGetResponse{msg}
		return true, err
	case 7: // data.gpsi_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_GpsiProfileGetResponse{msg}
		return true, err
	case 8: // data.gpsiprefix_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprefixprofile.GpsiprefixProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_GpsiprefixProfileGetResponse{msg}
		return true, err
	case 9: // data.nf_profile_count_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileCountGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_NfProfileCountGetResponse{msg}
		return true, err
	case 10: // data.cache_nf_profile_get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(cachenfprofile.CacheNFProfileGetResponse)
		err := b.DecodeMessage(msg)
		m.Data = &GetResponse_CacheNfProfileGetResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetResponse)
	// data
	switch x := m.Data.(type) {
	case *GetResponse_NfProfileGetResponse:
		s := proto.Size(x.NfProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_SubscriptionGetResponse:
		s := proto.Size(x.SubscriptionGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_NrfAddressGetResponse:
		s := proto.Size(x.NrfAddressGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_GroupProfileGetResponse:
		s := proto.Size(x.GroupProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_NrfProfileGetResponse:
		s := proto.Size(x.NrfProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_ImsiprefixProfileGetResponse:
		s := proto.Size(x.ImsiprefixProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_GpsiProfileGetResponse:
		s := proto.Size(x.GpsiProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_GpsiprefixProfileGetResponse:
		s := proto.Size(x.GpsiprefixProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_NfProfileCountGetResponse:
		s := proto.Size(x.NfProfileCountGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetResponse_CacheNfProfileGetResponse:
		s := proto.Size(x.CacheNfProfileGetResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DelResponse struct {
	// Types that are valid to be assigned to Data:
	//	*DelResponse_NfProfileDelResponse
	//	*DelResponse_SubscriptionDelResponse
	//	*DelResponse_NrfAddressDelResponse
	//	*DelResponse_GroupProfileDelResponse
	//	*DelResponse_NrfProfileDelResponse
	//	*DelResponse_GpsiProfileDelResponse
	Data                 isDelResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelResponse) Reset()         { *m = DelResponse{} }
func (m *DelResponse) String() string { return proto.CompactTextString(m) }
func (*DelResponse) ProtoMessage()    {}
func (*DelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{18}
}
func (m *DelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelResponse.Unmarshal(m, b)
}
func (m *DelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelResponse.Marshal(b, m, deterministic)
}
func (dst *DelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelResponse.Merge(dst, src)
}
func (m *DelResponse) XXX_Size() int {
	return xxx_messageInfo_DelResponse.Size(m)
}
func (m *DelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelResponse proto.InternalMessageInfo

type isDelResponse_Data interface {
	isDelResponse_Data()
}

type DelResponse_NfProfileDelResponse struct {
	NfProfileDelResponse *nfprofile.NFProfileDelResponse `protobuf:"bytes,1,opt,name=nf_profile_del_response,json=nfProfileDelResponse,proto3,oneof"`
}

type DelResponse_SubscriptionDelResponse struct {
	SubscriptionDelResponse *subscription.SubscriptionDelResponse `protobuf:"bytes,2,opt,name=subscription_del_response,json=subscriptionDelResponse,proto3,oneof"`
}

type DelResponse_NrfAddressDelResponse struct {
	NrfAddressDelResponse *nrfaddress.NRFAddressDelResponse `protobuf:"bytes,3,opt,name=nrf_address_del_response,json=nrfAddressDelResponse,proto3,oneof"`
}

type DelResponse_GroupProfileDelResponse struct {
	GroupProfileDelResponse *groupprofile.GroupProfileDelResponse `protobuf:"bytes,4,opt,name=group_profile_del_response,json=groupProfileDelResponse,proto3,oneof"`
}

type DelResponse_NrfProfileDelResponse struct {
	NrfProfileDelResponse *nrfprofile.NRFProfileDelResponse `protobuf:"bytes,5,opt,name=nrf_profile_del_response,json=nrfProfileDelResponse,proto3,oneof"`
}

type DelResponse_GpsiProfileDelResponse struct {
	GpsiProfileDelResponse *gpsiprofile.GpsiProfileDelResponse `protobuf:"bytes,6,opt,name=gpsi_profile_del_response,json=gpsiProfileDelResponse,proto3,oneof"`
}

func (*DelResponse_NfProfileDelResponse) isDelResponse_Data() {}

func (*DelResponse_SubscriptionDelResponse) isDelResponse_Data() {}

func (*DelResponse_NrfAddressDelResponse) isDelResponse_Data() {}

func (*DelResponse_GroupProfileDelResponse) isDelResponse_Data() {}

func (*DelResponse_NrfProfileDelResponse) isDelResponse_Data() {}

func (*DelResponse_GpsiProfileDelResponse) isDelResponse_Data() {}

func (m *DelResponse) GetData() isDelResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DelResponse) GetNfProfileDelResponse() *nfprofile.NFProfileDelResponse {
	if x, ok := m.GetData().(*DelResponse_NfProfileDelResponse); ok {
		return x.NfProfileDelResponse
	}
	return nil
}

func (m *DelResponse) GetSubscriptionDelResponse() *subscription.SubscriptionDelResponse {
	if x, ok := m.GetData().(*DelResponse_SubscriptionDelResponse); ok {
		return x.SubscriptionDelResponse
	}
	return nil
}

func (m *DelResponse) GetNrfAddressDelResponse() *nrfaddress.NRFAddressDelResponse {
	if x, ok := m.GetData().(*DelResponse_NrfAddressDelResponse); ok {
		return x.NrfAddressDelResponse
	}
	return nil
}

func (m *DelResponse) GetGroupProfileDelResponse() *groupprofile.GroupProfileDelResponse {
	if x, ok := m.GetData().(*DelResponse_GroupProfileDelResponse); ok {
		return x.GroupProfileDelResponse
	}
	return nil
}

func (m *DelResponse) GetNrfProfileDelResponse() *nrfprofile.NRFProfileDelResponse {
	if x, ok := m.GetData().(*DelResponse_NrfProfileDelResponse); ok {
		return x.NrfProfileDelResponse
	}
	return nil
}

func (m *DelResponse) GetGpsiProfileDelResponse() *gpsiprofile.GpsiProfileDelResponse {
	if x, ok := m.GetData().(*DelResponse_GpsiProfileDelResponse); ok {
		return x.GpsiProfileDelResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DelResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DelResponse_OneofMarshaler, _DelResponse_OneofUnmarshaler, _DelResponse_OneofSizer, []interface{}{
		(*DelResponse_NfProfileDelResponse)(nil),
		(*DelResponse_SubscriptionDelResponse)(nil),
		(*DelResponse_NrfAddressDelResponse)(nil),
		(*DelResponse_GroupProfileDelResponse)(nil),
		(*DelResponse_NrfProfileDelResponse)(nil),
		(*DelResponse_GpsiProfileDelResponse)(nil),
	}
}

func _DelResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DelResponse)
	// data
	switch x := m.Data.(type) {
	case *DelResponse_NfProfileDelResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfProfileDelResponse); err != nil {
			return err
		}
	case *DelResponse_SubscriptionDelResponse:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionDelResponse); err != nil {
			return err
		}
	case *DelResponse_NrfAddressDelResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfAddressDelResponse); err != nil {
			return err
		}
	case *DelResponse_GroupProfileDelResponse:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupProfileDelResponse); err != nil {
			return err
		}
	case *DelResponse_NrfProfileDelResponse:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NrfProfileDelResponse); err != nil {
			return err
		}
	case *DelResponse_GpsiProfileDelResponse:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GpsiProfileDelResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DelResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _DelResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DelResponse)
	switch tag {
	case 1: // data.nf_profile_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nfprofile.NFProfileDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_NfProfileDelResponse{msg}
		return true, err
	case 2: // data.subscription_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(subscription.SubscriptionDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_SubscriptionDelResponse{msg}
		return true, err
	case 3: // data.nrf_address_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfaddress.NRFAddressDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_NrfAddressDelResponse{msg}
		return true, err
	case 4: // data.group_profile_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(groupprofile.GroupProfileDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_GroupProfileDelResponse{msg}
		return true, err
	case 5: // data.nrf_profile_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrfprofile.NRFProfileDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_NrfProfileDelResponse{msg}
		return true, err
	case 6: // data.gpsi_profile_del_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gpsiprofile.GpsiProfileDelResponse)
		err := b.DecodeMessage(msg)
		m.Data = &DelResponse_GpsiProfileDelResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DelResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DelResponse)
	// data
	switch x := m.Data.(type) {
	case *DelResponse_NfProfileDelResponse:
		s := proto.Size(x.NfProfileDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelResponse_SubscriptionDelResponse:
		s := proto.Size(x.SubscriptionDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelResponse_NrfAddressDelResponse:
		s := proto.Size(x.NrfAddressDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelResponse_GroupProfileDelResponse:
		s := proto.Size(x.GroupProfileDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelResponse_NrfProfileDelResponse:
		s := proto.Size(x.NrfProfileDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DelResponse_GpsiProfileDelResponse:
		s := proto.Size(x.GpsiProfileDelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NFProtocolError struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NFProtocolError) Reset()         { *m = NFProtocolError{} }
func (m *NFProtocolError) String() string { return proto.CompactTextString(m) }
func (*NFProtocolError) ProtoMessage()    {}
func (*NFProtocolError) Descriptor() ([]byte, []int) {
	return fileDescriptor_NFDataManagementService_aeaa53defa1d90b5, []int{19}
}
func (m *NFProtocolError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFProtocolError.Unmarshal(m, b)
}
func (m *NFProtocolError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFProtocolError.Marshal(b, m, deterministic)
}
func (dst *NFProtocolError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFProtocolError.Merge(dst, src)
}
func (m *NFProtocolError) XXX_Size() int {
	return xxx_messageInfo_NFProtocolError.Size(m)
}
func (m *NFProtocolError) XXX_DiscardUnknown() {
	xxx_messageInfo_NFProtocolError.DiscardUnknown(m)
}

var xxx_messageInfo_NFProtocolError proto.InternalMessageInfo

func (m *NFProtocolError) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*InsertRequest)(nil), "grpc.InsertRequest")
	proto.RegisterType((*KVItem)(nil), "grpc.KVItem")
	proto.RegisterType((*InsertResponse)(nil), "grpc.InsertResponse")
	proto.RegisterType((*RemoveRequest)(nil), "grpc.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "grpc.RemoveResponse")
	proto.RegisterType((*ParaRequest)(nil), "grpc.ParaRequest")
	proto.RegisterType((*ParaResponse)(nil), "grpc.ParaResponse")
	proto.RegisterType((*QueryRequest)(nil), "grpc.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "grpc.QueryResponse")
	proto.RegisterType((*TraceInfo)(nil), "grpc.TraceInfo")
	proto.RegisterType((*NFMessage)(nil), "grpc.NFMessage")
	proto.RegisterType((*NFRequest)(nil), "grpc.NFRequest")
	proto.RegisterType((*PutRequest)(nil), "grpc.PutRequest")
	proto.RegisterType((*GetRequest)(nil), "grpc.GetRequest")
	proto.RegisterType((*DelRequest)(nil), "grpc.DelRequest")
	proto.RegisterType((*NFResponse)(nil), "grpc.NFResponse")
	proto.RegisterType((*PutResponse)(nil), "grpc.PutResponse")
	proto.RegisterType((*GetResponse)(nil), "grpc.GetResponse")
	proto.RegisterType((*DelResponse)(nil), "grpc.DelResponse")
	proto.RegisterType((*NFProtocolError)(nil), "grpc.NFProtocolError")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NFDataManagementServiceClient is the client API for NFDataManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NFDataManagementServiceClient interface {
	Execute(ctx context.Context, in *NFMessage, opts ...grpc.CallOption) (*NFMessage, error)
	Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	QueryByKey(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (NFDataManagementService_QueryByKeyClient, error)
	QueryByFilter(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (NFDataManagementService_QueryByFilterClient, error)
	TransferParameter(ctx context.Context, in *ParaRequest, opts ...grpc.CallOption) (*ParaResponse, error)
}

type nFDataManagementServiceClient struct {
	cc *grpc.ClientConn
}

func NewNFDataManagementServiceClient(cc *grpc.ClientConn) NFDataManagementServiceClient {
	return &nFDataManagementServiceClient{cc}
}

func (c *nFDataManagementServiceClient) Execute(ctx context.Context, in *NFMessage, opts ...grpc.CallOption) (*NFMessage, error) {
	out := new(NFMessage)
	err := c.cc.Invoke(ctx, "/grpc.NFDataManagementService/execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFDataManagementServiceClient) Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/grpc.NFDataManagementService/insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFDataManagementServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/grpc.NFDataManagementService/remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFDataManagementServiceClient) QueryByKey(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (NFDataManagementService_QueryByKeyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NFDataManagementService_serviceDesc.Streams[0], "/grpc.NFDataManagementService/queryByKey", opts...)
	if err != nil {
		return nil, err
	}
	x := &nFDataManagementServiceQueryByKeyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NFDataManagementService_QueryByKeyClient interface {
	Recv() (*QueryResponse, error)
	grpc.ClientStream
}

type nFDataManagementServiceQueryByKeyClient struct {
	grpc.ClientStream
}

func (x *nFDataManagementServiceQueryByKeyClient) Recv() (*QueryResponse, error) {
	m := new(QueryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nFDataManagementServiceClient) QueryByFilter(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (NFDataManagementService_QueryByFilterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NFDataManagementService_serviceDesc.Streams[1], "/grpc.NFDataManagementService/queryByFilter", opts...)
	if err != nil {
		return nil, err
	}
	x := &nFDataManagementServiceQueryByFilterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NFDataManagementService_QueryByFilterClient interface {
	Recv() (*QueryResponse, error)
	grpc.ClientStream
}

type nFDataManagementServiceQueryByFilterClient struct {
	grpc.ClientStream
}

func (x *nFDataManagementServiceQueryByFilterClient) Recv() (*QueryResponse, error) {
	m := new(QueryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nFDataManagementServiceClient) TransferParameter(ctx context.Context, in *ParaRequest, opts ...grpc.CallOption) (*ParaResponse, error) {
	out := new(ParaResponse)
	err := c.cc.Invoke(ctx, "/grpc.NFDataManagementService/transferParameter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NFDataManagementServiceServer is the server API for NFDataManagementService service.
type NFDataManagementServiceServer interface {
	Execute(context.Context, *NFMessage) (*NFMessage, error)
	Insert(context.Context, *InsertRequest) (*InsertResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	QueryByKey(*QueryRequest, NFDataManagementService_QueryByKeyServer) error
	QueryByFilter(*QueryRequest, NFDataManagementService_QueryByFilterServer) error
	TransferParameter(context.Context, *ParaRequest) (*ParaResponse, error)
}

func RegisterNFDataManagementServiceServer(s *grpc.Server, srv NFDataManagementServiceServer) {
	s.RegisterService(&_NFDataManagementService_serviceDesc, srv)
}

func _NFDataManagementService_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NFMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFDataManagementServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NFDataManagementService/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFDataManagementServiceServer).Execute(ctx, req.(*NFMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFDataManagementService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFDataManagementServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NFDataManagementService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFDataManagementServiceServer).Insert(ctx, req.(*InsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFDataManagementService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFDataManagementServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NFDataManagementService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFDataManagementServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFDataManagementService_QueryByKey_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NFDataManagementServiceServer).QueryByKey(m, &nFDataManagementServiceQueryByKeyServer{stream})
}

type NFDataManagementService_QueryByKeyServer interface {
	Send(*QueryResponse) error
	grpc.ServerStream
}

type nFDataManagementServiceQueryByKeyServer struct {
	grpc.ServerStream
}

func (x *nFDataManagementServiceQueryByKeyServer) Send(m *QueryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NFDataManagementService_QueryByFilter_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NFDataManagementServiceServer).QueryByFilter(m, &nFDataManagementServiceQueryByFilterServer{stream})
}

type NFDataManagementService_QueryByFilterServer interface {
	Send(*QueryResponse) error
	grpc.ServerStream
}

type nFDataManagementServiceQueryByFilterServer struct {
	grpc.ServerStream
}

func (x *nFDataManagementServiceQueryByFilterServer) Send(m *QueryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NFDataManagementService_TransferParameter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFDataManagementServiceServer).TransferParameter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NFDataManagementService/TransferParameter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFDataManagementServiceServer).TransferParameter(ctx, req.(*ParaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NFDataManagementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.NFDataManagementService",
	HandlerType: (*NFDataManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "execute",
			Handler:    _NFDataManagementService_Execute_Handler,
		},
		{
			MethodName: "insert",
			Handler:    _NFDataManagementService_Insert_Handler,
		},
		{
			MethodName: "remove",
			Handler:    _NFDataManagementService_Remove_Handler,
		},
		{
			MethodName: "transferParameter",
			Handler:    _NFDataManagementService_TransferParameter_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "queryByKey",
			Handler:       _NFDataManagementService_QueryByKey_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "queryByFilter",
			Handler:       _NFDataManagementService_QueryByFilter_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "NFDataManagementService.proto",
}

func init() {
	proto.RegisterFile("NFDataManagementService.proto", fileDescriptor_NFDataManagementService_aeaa53defa1d90b5)
}

var fileDescriptor_NFDataManagementService_aeaa53defa1d90b5 = []byte{
	// 1849 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xdb, 0x6e, 0xdb, 0x46,
	0x1a, 0x96, 0x6c, 0xd9, 0xb2, 0x7f, 0x59, 0x4e, 0xc2, 0xf8, 0x20, 0xcb, 0x71, 0xe2, 0x68, 0x11,
	0x6c, 0x80, 0x20, 0xb2, 0xd7, 0x36, 0x36, 0xc1, 0x02, 0x1b, 0x60, 0x73, 0x70, 0x64, 0x04, 0x31,
	0xbc, 0x4c, 0x36, 0xd8, 0x1e, 0x00, 0x95, 0x96, 0x46, 0x0c, 0x1b, 0x89, 0x64, 0x86, 0x94, 0x1b,
	0xdf, 0xf5, 0x25, 0x7a, 0xd9, 0x77, 0x28, 0x0a, 0xf4, 0xae, 0x4f, 0xd0, 0xeb, 0xbe, 0x40, 0x9f,
	0xa4, 0xc5, 0x70, 0x86, 0xe4, 0x1c, 0x65, 0xb2, 0x40, 0xef, 0xc4, 0x99, 0xf9, 0xbe, 0xff, 0x30,
	0xff, 0xc7, 0xf9, 0x39, 0x36, 0xec, 0x9c, 0x1e, 0x3f, 0x77, 0x62, 0xe7, 0xb5, 0xe3, 0x3b, 0x2e,
	0x9a, 0x20, 0x3f, 0x7e, 0x83, 0xf0, 0x85, 0x37, 0x40, 0xdd, 0x10, 0x07, 0x71, 0x60, 0xd5, 0x5c,
	0x1c, 0x0e, 0xda, 0x0f, 0xfd, 0xd1, 0x04, 0x45, 0x91, 0xe3, 0xa2, 0x3d, 0x7f, 0x14, 0xe2, 0x60,
	0xe4, 0x8d, 0xd1, 0xde, 0xe9, 0xf1, 0x19, 0xfd, 0x75, 0x36, 0x8d, 0x6d, 0xf4, 0x71, 0x8a, 0xa2,
	0x98, 0x82, 0xda, 0xdd, 0xab, 0x97, 0x47, 0x61, 0xe0, 0x47, 0xcc, 0xc8, 0x15, 0xf4, 0x2f, 0x51,
	0x29, 0xfa, 0x64, 0xb9, 0x40, 0x7f, 0x30, 0x73, 0xfd, 0xb3, 0x60, 0xea, 0xc7, 0x8a, 0x8d, 0xc3,
	0x82, 0x98, 0x12, 0x71, 0x3c, 0x47, 0xe3, 0x32, 0x71, 0x24, 0xcb, 0x05, 0x7a, 0xce, 0xa7, 0x68,
	0x7a, 0x1e, 0x0d, 0xb0, 0x17, 0xc6, 0x5e, 0xe0, 0xef, 0xbd, 0xe1, 0x1e, 0x94, 0xbd, 0x38, 0x2a,
	0x0a, 0x2a, 0x6d, 0x4a, 0xc9, 0xd9, 0x51, 0x51, 0x50, 0x69, 0x53, 0x4a, 0xea, 0x8e, 0x8a, 0x82,
	0x04, 0x53, 0x7b, 0x5c, 0xc2, 0xf1, 0xc8, 0x19, 0x0e, 0x31, 0x8a, 0xa2, 0xbd, 0x53, 0xfb, 0xf8,
	0x3f, 0xf4, 0xa7, 0x92, 0xbc, 0xfd, 0x22, 0x80, 0x52, 0x26, 0x94, 0xa4, 0xed, 0x17, 0x01, 0x94,
	0x32, 0xa1, 0x24, 0x6b, 0xbf, 0x08, 0x60, 0x86, 0x89, 0xac, 0x34, 0x6d, 0xa3, 0xe2, 0xf7, 0x8b,
	0x00, 0x4a, 0x99, 0xb8, 0x22, 0x51, 0x06, 0x40, 0x29, 0x13, 0x57, 0x24, 0xca, 0x00, 0x30, 0x15,
	0xaf, 0x8b, 0x83, 0x69, 0x98, 0x62, 0x5e, 0x92, 0x07, 0x53, 0xb2, 0x8e, 0x8a, 0x82, 0x4a, 0x9b,
	0x9a, 0x25, 0xc9, 0xd9, 0xa0, 0xd2, 0xa6, 0x66, 0x49, 0x72, 0x36, 0x48, 0x30, 0xf5, 0xef, 0x1c,
	0xe5, 0x4d, 0x22, 0x2f, 0xc4, 0x68, 0xe4, 0x7d, 0x4a, 0xa1, 0x27, 0xd9, 0x88, 0x29, 0xbe, 0x27,
	0xe5, 0xe1, 0x82, 0xf9, 0x7f, 0x70, 0x4e, 0x87, 0x64, 0x35, 0xf3, 0x39, 0x8c, 0x3c, 0xd3, 0xee,
	0x1d, 0x14, 0x83, 0x94, 0x34, 0xa3, 0x44, 0x76, 0x50, 0x0c, 0x52, 0xd2, 0x8c, 0xb2, 0x6b, 0x07,
	0xc5, 0x20, 0xa6, 0x3d, 0xa3, 0x18, 0x3e, 0xe9, 0x2f, 0xc3, 0x12, 0x7b, 0x56, 0x14, 0x2e, 0x98,
	0x7f, 0x94, 0xe3, 0x07, 0xce, 0xe0, 0x3d, 0xca, 0xcf, 0xce, 0x67, 0xe4, 0xd1, 0xdc, 0x96, 0x3c,
	0x2e, 0x03, 0xfc, 0x53, 0x26, 0x95, 0x58, 0x1f, 0x97, 0x01, 0xf2, 0x26, 0x3b, 0xdf, 0x40, 0xf3,
	0xc4, 0x8f, 0x10, 0x4e, 0x09, 0xad, 0x3b, 0xd0, 0xc0, 0xc8, 0xf5, 0x02, 0xbf, 0xef, 0x3b, 0x13,
	0xd4, 0xaa, 0xee, 0x56, 0xef, 0x2f, 0xdb, 0x40, 0x87, 0x4e, 0x9d, 0x09, 0xb2, 0x76, 0xa1, 0xe6,
	0xc5, 0x68, 0xd2, 0x9a, 0xdb, 0x9d, 0xbf, 0xdf, 0x38, 0x58, 0xe9, 0x92, 0xce, 0xad, 0xfb, 0xea,
	0xdd, 0x49, 0x8c, 0x26, 0x76, 0x32, 0x63, 0xfd, 0x0d, 0x9a, 0x31, 0x76, 0x06, 0xa8, 0x8f, 0x7c,
	0xe7, 0x7c, 0x8c, 0x86, 0xad, 0xf9, 0xdd, 0xea, 0xfd, 0x25, 0x7b, 0x25, 0x19, 0x7c, 0x41, 0xc7,
	0x3a, 0xfb, 0xb0, 0x48, 0x41, 0xd6, 0x75, 0x98, 0xff, 0x80, 0x2e, 0x99, 0x25, 0xf2, 0xd3, 0x5a,
	0x83, 0x85, 0x0b, 0x67, 0x3c, 0x45, 0xad, 0xb9, 0x64, 0x8c, 0x3e, 0x74, 0x46, 0xb0, 0x9a, 0xba,
	0x4a, 0x43, 0xb0, 0x2c, 0xa8, 0x0d, 0x82, 0x21, 0x75, 0xb2, 0x69, 0x27, 0xbf, 0x53, 0x36, 0xe2,
	0x1d, 0x63, 0xeb, 0x02, 0x50, 0x77, 0x3c, 0x7f, 0x14, 0x24, 0xbe, 0x34, 0x0e, 0xae, 0x51, 0xb7,
	0xdf, 0x92, 0xf1, 0x13, 0x7f, 0x14, 0xd8, 0xcb, 0x71, 0xfa, 0xb3, 0xe3, 0x42, 0xd3, 0x46, 0x93,
	0xe0, 0x02, 0x15, 0x4e, 0x89, 0x6a, 0xb3, 0x50, 0x0a, 0x46, 0xb0, 0x9a, 0x1a, 0xfa, 0x4b, 0x03,
	0xfa, 0xb6, 0x0a, 0x8d, 0x33, 0x07, 0x3b, 0x69, 0x3c, 0xf7, 0x60, 0x35, 0x74, 0xb0, 0x33, 0x41,
	0x31, 0xc2, 0x7c, 0x48, 0xcd, 0x6c, 0x34, 0x89, 0xea, 0xef, 0x70, 0x2d, 0x5f, 0xc6, 0xef, 0x47,
	0x8e, 0x7e, 0x47, 0x46, 0xad, 0xbb, 0xb0, 0xc2, 0x07, 0xcb, 0x62, 0x6d, 0x70, 0xb1, 0x76, 0x6c,
	0x58, 0xa1, 0x1e, 0xcc, 0x08, 0x54, 0x0c, 0x6b, 0xee, 0xca, 0xb0, 0xbe, 0x86, 0x95, 0xff, 0x4e,
	0x11, 0xbe, 0x2c, 0xbc, 0x4d, 0x6b, 0xb0, 0xf0, 0x91, 0x00, 0x58, 0x2e, 0xe9, 0x43, 0xb1, 0xad,
	0xf2, 0xa0, 0xc9, 0x6c, 0xcd, 0x08, 0x80, 0x2b, 0xdb, 0xf9, 0xac, 0x6c, 0x4b, 0xef, 0xd6, 0xff,
	0x60, 0x39, 0x1b, 0x27, 0xa9, 0x75, 0x30, 0xf6, 0x2e, 0x9c, 0x71, 0x3f, 0xf6, 0x58, 0x50, 0x35,
	0xbb, 0xc1, 0xc6, 0xde, 0x7a, 0x13, 0x44, 0x76, 0x73, 0x88, 0x42, 0x07, 0xc7, 0x53, 0x8c, 0xe8,
	0xa2, 0xb9, 0x64, 0x51, 0x33, 0x1b, 0x25, 0xcb, 0x3a, 0xbf, 0x54, 0x61, 0xf9, 0xf4, 0xf8, 0x35,
	0x7d, 0x4b, 0x58, 0x2d, 0xa8, 0x5f, 0x20, 0x1c, 0x79, 0x81, 0xcf, 0xf2, 0x94, 0x3e, 0x5a, 0x0f,
	0xa0, 0x8e, 0x69, 0x42, 0xc5, 0x2d, 0x38, 0x3d, 0x66, 0x79, 0xee, 0x55, 0xec, 0x74, 0x85, 0xd5,
	0x85, 0x25, 0xcc, 0x32, 0xc2, 0x22, 0xbb, 0x9e, 0xaf, 0xa6, 0xe3, 0xbd, 0x8a, 0x9d, 0xad, 0xb1,
	0x9e, 0xc0, 0x6a, 0xf2, 0xda, 0x19, 0x04, 0xe3, 0x3e, 0xc2, 0x38, 0xc0, 0xad, 0x5a, 0x82, 0x5a,
	0x4f, 0x51, 0x67, 0x6c, 0xf6, 0x05, 0x99, 0xec, 0x55, 0xec, 0x66, 0xc8, 0x0f, 0x3c, 0x5d, 0x84,
	0xda, 0xd0, 0x89, 0x9d, 0xce, 0x8f, 0x49, 0x30, 0xe9, 0xc6, 0x1f, 0x42, 0x23, 0x9c, 0xc6, 0xfd,
	0xd4, 0xed, 0x2a, 0xef, 0x48, 0xfe, 0x76, 0xee, 0x55, 0x6c, 0x08, 0xb3, 0x27, 0x02, 0x72, 0x51,
	0x0e, 0x9a, 0xe3, 0x41, 0xf9, 0xfb, 0x95, 0x80, 0x5c, 0xc4, 0x83, 0x86, 0x68, 0x9c, 0x81, 0x84,
	0x90, 0xf3, 0x33, 0x8f, 0x80, 0x86, 0xd9, 0x53, 0xe6, 0xf4, 0xef, 0x35, 0x80, 0xdc, 0x1d, 0xeb,
	0x0c, 0x36, 0xfc, 0x51, 0x9f, 0xbd, 0xa7, 0xfb, 0x6a, 0x00, 0x5b, 0x5c, 0x4e, 0xc4, 0x73, 0xa6,
	0x57, 0xb1, 0x6f, 0xfa, 0x23, 0x65, 0xd8, 0xfa, 0x3f, 0xb4, 0xf8, 0xaf, 0x14, 0x81, 0x93, 0xc6,
	0x77, 0x8b, 0x72, 0xea, 0xbf, 0xe4, 0x7a, 0x15, 0x7b, 0x23, 0xd2, 0xce, 0x58, 0x6f, 0x60, 0xd3,
	0xc7, 0xa3, 0x3e, 0xeb, 0xe9, 0x05, 0x62, 0x9a, 0x83, 0x36, 0x73, 0x56, 0xf3, 0x8d, 0xd3, 0xab,
	0xd8, 0x6b, 0x3e, 0x1e, 0x29, 0xe3, 0xd6, 0x67, 0xb0, 0x95, 0x74, 0x70, 0xda, 0x1c, 0xd4, 0x78,
	0x7f, 0xf5, 0x6d, 0x2e, 0xf1, 0xd7, 0xd5, 0xce, 0xa4, 0xfe, 0xea, 0x88, 0x17, 0x24, 0x7f, 0x75,
	0xb4, 0xc4, 0x5f, 0x95, 0xf4, 0x1d, 0xb4, 0x48, 0x23, 0xa1, 0x65, 0x5d, 0x4c, 0x58, 0xb7, 0x99,
	0xbb, 0xba, 0xb6, 0xae, 0x57, 0xb1, 0xd7, 0x5d, 0xdd, 0x84, 0xf5, 0x15, 0xdc, 0x4a, 0x0e, 0xed,
	0xbe, 0xa1, 0x1c, 0xea, 0x09, 0xf7, 0x6d, 0xca, 0x6d, 0xea, 0x3d, 0x7a, 0x15, 0xbb, 0x95, 0xb0,
	0x9c, 0xaa, 0x9e, 0x67, 0x15, 0xf8, 0x53, 0x1d, 0x20, 0xaf, 0x6d, 0xa9, 0x02, 0x79, 0x35, 0xe8,
	0x2b, 0x50, 0x90, 0x45, 0x5e, 0x81, 0x1c, 0xa3, 0x5c, 0x81, 0xaa, 0xc2, 0x34, 0x15, 0x28, 0xd0,
	0x0a, 0x15, 0xc8, 0x31, 0x4b, 0x15, 0xc8, 0x13, 0x1b, 0x2a, 0x50, 0xa0, 0xe5, 0x2a, 0x90, 0x23,
	0x55, 0x2a, 0x90, 0xa7, 0x35, 0x56, 0xa0, 0xe8, 0xaf, 0xab, 0x9d, 0x91, 0x2b, 0x90, 0x27, 0x36,
	0x54, 0xa0, 0xe2, 0xaf, 0x4a, 0xfa, 0x1e, 0x6e, 0xe7, 0x9f, 0x1f, 0x5a, 0x6e, 0x5a, 0x87, 0x77,
	0x29, 0xf7, 0x8c, 0xef, 0x9a, 0x5e, 0xc5, 0xde, 0xf6, 0xcc, 0xd3, 0x4a, 0xad, 0xf3, 0x36, 0xea,
	0x86, 0x5a, 0x17, 0xd8, 0xf9, 0x5a, 0x17, 0x23, 0xc8, 0x9b, 0x71, 0x2d, 0xfb, 0x12, 0x1f, 0xc1,
	0x8c, 0x2e, 0x9f, 0x44, 0xe0, 0x9a, 0xa7, 0x89, 0xaa, 0xb8, 0xe2, 0x1e, 0x04, 0x53, 0x3f, 0x16,
	0xec, 0x2c, 0xf3, 0xaa, 0x32, 0xdd, 0xd2, 0x11, 0x55, 0x65, 0x75, 0x2e, 0xcd, 0x69, 0x75, 0xcb,
	0x5b, 0x00, 0xb3, 0x6e, 0x45, 0x0b, 0xa2, 0x6e, 0xf3, 0xb9, 0x4c, 0xb7, 0xdf, 0xd7, 0x00, 0xf2,
	0xe3, 0x45, 0xd2, 0x2d, 0x7f, 0x20, 0xe9, 0x75, 0x2b, 0x9c, 0x4c, 0xb9, 0x6e, 0x39, 0x46, 0x59,
	0xb7, 0x3c, 0xa7, 0x51, 0xb7, 0x02, 0xad, 0xa0, 0x5b, 0x8e, 0x59, 0xd2, 0xad, 0x7a, 0x7a, 0x2a,
	0xba, 0x15, 0x68, 0x39, 0xdd, 0x72, 0xa4, 0x8a, 0x6e, 0x79, 0x5a, 0xa3, 0x6e, 0x45, 0x7f, 0x5d,
	0xed, 0x8c, 0xac, 0x5b, 0x9e, 0xd8, 0xa0, 0x5b, 0xc5, 0x5f, 0x95, 0x54, 0x56, 0x13, 0xcf, 0x6a,
	0x3a, 0x39, 0x04, 0x5a, 0x5e, 0x4d, 0xcf, 0xd5, 0xce, 0xe2, 0xe7, 0x2a, 0x40, 0xde, 0x71, 0x59,
	0xff, 0x84, 0x15, 0x7a, 0x7e, 0xb0, 0xce, 0x8c, 0x56, 0xc5, 0x0d, 0xae, 0x21, 0xca, 0x5a, 0xb3,
	0x46, 0x98, 0x3f, 0x12, 0x1c, 0xad, 0x5f, 0x86, 0x9b, 0xe3, 0x71, 0xdc, 0xa7, 0x23, 0xc1, 0xb9,
	0x48, 0xc0, 0xd1, 0x88, 0x84, 0x4e, 0xf0, 0x06, 0xd7, 0x16, 0xe5, 0xb8, 0x61, 0xfe, 0x98, 0xb9,
	0xff, 0xdd, 0x02, 0x34, 0x38, 0xb7, 0x92, 0x3d, 0x90, 0x8f, 0x42, 0x21, 0x94, 0xb6, 0xae, 0x35,
	0xca, 0x6c, 0xac, 0x89, 0xbd, 0x11, 0x23, 0xfd, 0x02, 0xb6, 0x34, 0xcd, 0x91, 0x10, 0xe9, 0x8e,
	0xa1, 0x3b, 0xca, 0x98, 0x37, 0x23, 0xfd, 0x14, 0xd9, 0x60, 0xb5, 0x3f, 0x12, 0xb2, 0xb1, 0xad,
	0x6d, 0x90, 0x32, 0xe6, 0x75, 0xa9, 0x43, 0x62, 0xbc, 0x5f, 0x42, 0x5b, 0xd7, 0x22, 0x31, 0xe6,
	0x1a, 0xef, 0xb5, 0xe1, 0x56, 0x8f, 0x78, 0xed, 0xea, 0xa7, 0x52, 0xaf, 0xb5, 0xdc, 0x0b, 0x92,
	0xd7, 0x5a, 0xe6, 0x75, 0xa9, 0x4f, 0x62, 0xbc, 0x44, 0x9e, 0x6a, 0xa3, 0xc4, 0x88, 0x17, 0x05,
	0x79, 0x6a, 0x6f, 0xb3, 0x12, 0x79, 0x6a, 0x67, 0xac, 0x01, 0xec, 0x18, 0x7a, 0x25, 0x46, 0x4f,
	0x0f, 0xa7, 0x3b, 0xc6, 0x66, 0x29, 0xb3, 0xb0, 0xa5, 0xe9, 0x96, 0xa4, 0xba, 0xfc, 0xb5, 0x0e,
	0x0d, 0xae, 0xec, 0xa5, 0xba, 0x14, 0xa4, 0xa2, 0xaf, 0x4b, 0x51, 0x33, 0x6b, 0x62, 0xc7, 0x64,
	0xa8, 0x4b, 0x8d, 0x02, 0x77, 0x0c, 0x3d, 0x93, 0xbe, 0x2e, 0x79, 0x72, 0xa9, 0x2e, 0x05, 0x6e,
	0x43, 0x5d, 0x8a, 0xcc, 0xeb, 0x52, 0xdf, 0x64, 0xaa, 0x4b, 0x81, 0xd9, 0x58, 0x97, 0x92, 0xd7,
	0xae, 0x7e, 0x4a, 0xae, 0x4b, 0x81, 0xdb, 0x50, 0x97, 0xaa, 0xd7, 0x1a, 0xde, 0x0f, 0x70, 0xc7,
	0xd8, 0x3e, 0x09, 0xd5, 0xd9, 0x99, 0xd5, 0x3f, 0x65, 0x56, 0x6e, 0x79, 0x33, 0xe6, 0x15, 0x11,
	0x08, 0x66, 0xea, 0x06, 0x11, 0x88, 0x06, 0x36, 0x5c, 0xed, 0x0c, 0x89, 0xc3, 0xd8, 0x44, 0x31,
	0x03, 0x4b, 0x7c, 0x1c, 0xb3, 0x2e, 0x3b, 0x49, 0x1c, 0xee, 0x8c, 0x79, 0xa2, 0x38, 0x43, 0x1f,
	0xc5, 0x4c, 0x2d, 0xf3, 0x8a, 0x33, 0xfe, 0xe9, 0x92, 0x28, 0x4e, 0xd3, 0x49, 0xcd, 0x90, 0xb5,
	0x60, 0x04, 0xcc, 0xb2, 0x96, 0x8c, 0x68, 0x9a, 0x29, 0x49, 0xd6, 0x3f, 0xd4, 0xa0, 0xc1, 0x9d,
	0x4a, 0x92, 0xac, 0x85, 0x93, 0x4c, 0x2f, 0x6b, 0xf1, 0x48, 0x5b, 0x13, 0x1b, 0x2a, 0x83, 0xac,
	0x05, 0x5a, 0xa3, 0xac, 0x45, 0xe6, 0xcd, 0x48, 0x3f, 0x25, 0xcb, 0x5a, 0x73, 0xf8, 0x6e, 0x6b,
	0xbb, 0x2a, 0x9d, 0xac, 0x79, 0x5e, 0x45, 0xd6, 0x02, 0xb3, 0x51, 0xd6, 0x92, 0xd7, 0xae, 0x7e,
	0x4a, 0x96, 0xb5, 0xc0, 0x6d, 0x90, 0xb5, 0xea, 0xb5, 0x86, 0x57, 0x56, 0x9a, 0x40, 0x6c, 0x3a,
	0x6e, 0x44, 0xe6, 0x0d, 0x57, 0x3b, 0x93, 0x95, 0xcc, 0x3d, 0xb8, 0x26, 0xdd, 0x4d, 0xe9, 0x2e,
	0x00, 0x0f, 0x7e, 0x9b, 0x83, 0x4d, 0xc3, 0xff, 0x39, 0x58, 0x0f, 0xa0, 0x8e, 0x3e, 0xa1, 0xc1,
	0x34, 0x46, 0x56, 0x76, 0xa3, 0xc6, 0x6e, 0xe3, 0xda, 0xf2, 0x80, 0x75, 0x08, 0x8b, 0x5e, 0x72,
	0xd5, 0x6d, 0xdd, 0x64, 0xaf, 0x22, 0xfe, 0x8e, 0xbe, 0xbd, 0x26, 0x0e, 0xb2, 0x3c, 0x1c, 0xc2,
	0x22, 0x4e, 0xae, 0x93, 0x53, 0x90, 0x70, 0x8b, 0x9d, 0x82, 0xa4, 0x1b, 0xe7, 0x47, 0x00, 0xc9,
	0x35, 0xe8, 0xd3, 0xcb, 0x57, 0xe8, 0xd2, 0xb2, 0xe8, 0x1a, 0xfe, 0x5a, 0xb5, 0x7d, 0x53, 0x18,
	0xa3, 0xb0, 0xfd, 0xaa, 0xf5, 0x2f, 0x68, 0x32, 0xe0, 0xb1, 0x37, 0x8e, 0x11, 0x2e, 0x87, 0xbd,
	0x11, 0x63, 0xc7, 0x8f, 0x46, 0x08, 0x9f, 0xa5, 0x57, 0xc9, 0x56, 0xda, 0x9f, 0xe6, 0x17, 0xd5,
	0x6d, 0x8b, 0x1f, 0x62, 0x5b, 0xf2, 0x10, 0x6e, 0x23, 0xec, 0x0d, 0xa2, 0x28, 0xf0, 0xbb, 0x83,
	0x00, 0xa3, 0xae, 0x8f, 0x47, 0xdd, 0xe1, 0x79, 0x88, 0x83, 0x4f, 0x97, 0xc9, 0xf2, 0xcf, 0x1b,
	0x83, 0x60, 0xb2, 0xc7, 0x46, 0xce, 0x17, 0x93, 0x0b, 0xc4, 0xc3, 0x3f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x9a, 0xd6, 0x4f, 0xcb, 0x80, 0x22, 0x00, 0x00,
}
