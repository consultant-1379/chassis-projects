// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nfmessage/nrfprofile/NRFProfilePutRequest.proto

package nrfprofile // import "com/dbproxy/nfmessage/nrfprofile"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NRFProfilePutRequest struct {
	NrfInstanceId        string           `protobuf:"bytes,1,opt,name=nrf_instance_id,json=nrfInstanceId,proto3" json:"nrf_instance_id,omitempty"`
	Index                *NRFProfileIndex `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	RawNrfProfile        []byte           `protobuf:"bytes,3,opt,name=raw_nrf_profile,json=rawNrfProfile,proto3" json:"raw_nrf_profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NRFProfilePutRequest) Reset()         { *m = NRFProfilePutRequest{} }
func (m *NRFProfilePutRequest) String() string { return proto.CompactTextString(m) }
func (*NRFProfilePutRequest) ProtoMessage()    {}
func (*NRFProfilePutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_NRFProfilePutRequest_1b44db4574db9242, []int{0}
}
func (m *NRFProfilePutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NRFProfilePutRequest.Unmarshal(m, b)
}
func (m *NRFProfilePutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NRFProfilePutRequest.Marshal(b, m, deterministic)
}
func (dst *NRFProfilePutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NRFProfilePutRequest.Merge(dst, src)
}
func (m *NRFProfilePutRequest) XXX_Size() int {
	return xxx_messageInfo_NRFProfilePutRequest.Size(m)
}
func (m *NRFProfilePutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NRFProfilePutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NRFProfilePutRequest proto.InternalMessageInfo

func (m *NRFProfilePutRequest) GetNrfInstanceId() string {
	if m != nil {
		return m.NrfInstanceId
	}
	return ""
}

func (m *NRFProfilePutRequest) GetIndex() *NRFProfileIndex {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *NRFProfilePutRequest) GetRawNrfProfile() []byte {
	if m != nil {
		return m.RawNrfProfile
	}
	return nil
}

func init() {
	proto.RegisterType((*NRFProfilePutRequest)(nil), "grpc.NRFProfilePutRequest")
}

func init() {
	proto.RegisterFile("nfmessage/nrfprofile/NRFProfilePutRequest.proto", fileDescriptor_NRFProfilePutRequest_1b44db4574db9242)
}

var fileDescriptor_NRFProfilePutRequest_1b44db4574db9242 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x89, 0xff, 0xc0, 0xe8, 0x22, 0x14, 0x85, 0xea, 0xa9, 0x78, 0x90, 0xa2, 0x90, 0x82,
	0xfb, 0x06, 0x7b, 0x10, 0x7a, 0x59, 0x4a, 0x8e, 0x5e, 0x4a, 0x37, 0x9d, 0x2c, 0x01, 0x77, 0x12,
	0x27, 0x59, 0xb6, 0x3e, 0x87, 0x2f, 0x2c, 0x31, 0x41, 0x41, 0x0a, 0xde, 0x42, 0x98, 0xef, 0x37,
	0xf3, 0xfb, 0x78, 0x83, 0x7a, 0x07, 0xde, 0x0f, 0x5b, 0x68, 0x90, 0xb4, 0x23, 0xab, 0xcd, 0x1b,
	0x34, 0x6b, 0xf9, 0xd2, 0xa5, 0x67, 0xb7, 0x0f, 0x12, 0xde, 0xf7, 0xe0, 0x83, 0x70, 0x64, 0x83,
	0x2d, 0x4e, 0xb6, 0xe4, 0xd4, 0xdd, 0xe3, 0x3f, 0xb1, 0x16, 0x47, 0x98, 0x52, 0xe2, 0xfe, 0x93,
	0xf1, 0xeb, 0x39, 0x60, 0xf1, 0xc0, 0xaf, 0x90, 0x74, 0x6f, 0xd0, 0x87, 0x01, 0x15, 0xf4, 0x66,
	0x2c, 0x59, 0xc5, 0xea, 0x73, 0xb9, 0x40, 0xd2, 0x6d, 0xfe, 0x6d, 0xc7, 0xe2, 0x89, 0x9f, 0x9a,
	0xc8, 0x2b, 0x8f, 0x2a, 0x56, 0x5f, 0x3c, 0xdf, 0x88, 0x78, 0x82, 0xf8, 0xb3, 0x4c, 0xa6, 0x99,
	0x08, 0xa5, 0xe1, 0xd0, 0x47, 0x70, 0x3e, 0xab, 0x3c, 0xae, 0x58, 0x7d, 0x29, 0x17, 0x34, 0x1c,
	0xd6, 0xa4, 0x73, 0x66, 0x45, 0x7c, 0x09, 0x64, 0x94, 0xf7, 0x16, 0x85, 0xb2, 0x04, 0x02, 0x49,
	0x8b, 0x71, 0xe3, 0xc8, 0x4e, 0x1f, 0x69, 0xc1, 0x8f, 0xa2, 0xf8, 0x55, 0x5c, 0xdd, 0xce, 0x99,
	0x74, 0xd1, 0xf3, 0xb5, 0x52, 0x76, 0xd7, 0x64, 0xc2, 0x6c, 0xad, 0x9b, 0xb3, 0xef, 0x42, 0x96,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x07, 0x44, 0xd4, 0x75, 0x01, 0x00, 0x00,
}
